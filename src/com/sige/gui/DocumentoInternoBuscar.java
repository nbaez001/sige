package com.sige.gui;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.sige.entidad.Dependencia;
import com.sige.entidad.DocumentoInterno;
import com.sige.gui.ui.NumberField;
import com.sige.servicio.DocumentoInternoDestinoService;
import com.sige.servicio.DocumentoInternoService;
import com.sige.servicio.TipoDocumentoServicio;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.ExpedienteCanonico;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class DocumentoInternoBuscar extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField txtDependenciaOrigen;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private Boton btnFinal;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Boton btnAtras;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Label label_7;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private NumberField txtPaginaActual;
	@AutoGenerated
	private TextField txtAsunto;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private TextField txtAnio;
	@AutoGenerated
	private TextField txtNumDocumento;
	@AutoGenerated
	private TextField txtCodigoDocumento;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private Table tbDocumentos;
	private Window windowContiene;
	private CustomComponent quienLlama;
	private ExpedienteCanonico expedienteCanonico;
	private DocumentoInternoService docInternoService;
	private DocumentoInternoDestinoService docInternoDestinoService;
	private TipoDocumentoServicio tipoDocumentoService;
	private Log logger = LogFactory.getLog(DocumentoInternoBuscar.class);

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public DocumentoInternoBuscar(Window windowContiene,
			CustomComponent quienLlama, ExpedienteCanonico expedienteCanonico) {
		tipoDocumentoService = Injector
				.obtenerServicio(TipoDocumentoServicio.class);
		docInternoService = Injector
				.obtenerServicio(DocumentoInternoService.class);
		docInternoDestinoService = Injector
				.obtenerServicio(DocumentoInternoDestinoService.class);

		this.windowContiene = windowContiene;
		this.quienLlama = quienLlama;
		this.expedienteCanonico = expedienteCanonico;

		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();

		// TODO add user code here
	}

	public void postBuild() {

		label_6.setContentMode(ContentMode.HTML);
		lblTotalPaginas.setContentMode(ContentMode.HTML);
		label_5.setContentMode(ContentMode.HTML);
		label_4.setContentMode(ContentMode.HTML);
		label_3.setContentMode(ContentMode.HTML);
		label_2.setContentMode(ContentMode.HTML);
		label_1.setContentMode(ContentMode.HTML);

		this.btnAtras.addClickListener((ClickListener) this);
		this.btnBuscar.addClickListener((ClickListener) this);
		this.btnFinal.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnAtras.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFinal.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.txtPaginaActual.setValue("1");
		IndexedContainer contenedor = new IndexedContainer();
		contenedor.addContainerProperty("id", Long.class, null);
		contenedor.addContainerProperty("item", Long.class, null);
		contenedor.addContainerProperty("codigo", String.class, null);
		contenedor.addContainerProperty("numero", String.class, null);
		contenedor.addContainerProperty("documento", String.class, null);
		contenedor.addContainerProperty("dependencia", String.class, null);
		contenedor.addContainerProperty("anio", String.class, null);
		contenedor.addContainerProperty("asunto", String.class, null);
		tbDocumentos.setContainerDataSource(contenedor);
		tbDocumentos.setVisibleColumns(new Object[] { "item", "codigo",
				"numero", "documento", "dependencia", "anio", "asunto" });
		tbDocumentos.setColumnHeader("item", "N°");
		tbDocumentos.setColumnHeader("codigo", "Codigo");
		tbDocumentos.setColumnHeader("numero", "Numero");
		tbDocumentos.setColumnHeader("documento", "Documento");
		tbDocumentos.setColumnHeader("dependencia", "Dep. Origen");
		tbDocumentos.setColumnHeader("anio", "Año");
		tbDocumentos.setColumnHeader("asunto", "asunto");

		tbDocumentos.setColumnWidth("item", 15);
		tbDocumentos.setColumnWidth("codigo", 100);
		tbDocumentos.setColumnWidth("numero", 80);
		tbDocumentos.setColumnWidth("documento", 105);
		tbDocumentos.setColumnWidth("dependencia", 120);
		tbDocumentos.setColumnWidth("anio", 80);
		tbDocumentos.setColumnWidth("asunto", 200);
		tbDocumentos.setSelectable(true);
		tbDocumentos.setImmediate(true);
		tbDocumentos.addItemClickListener(new ItemClickListener() {

			@Override
			public void itemClick(ItemClickEvent event) {
				// TODO Auto-generated method stub
				Item item = tbDocumentos.getItem(event.getItemId());
				respuesta(new Long(item.getItemProperty("id").getValue()
						.toString()));
			}
		});

		txtCodigoDocumento.setImmediate(true);
		txtNumDocumento.setImmediate(true);
		txtAsunto.setImmediate(true);
		txtDependenciaOrigen.setImmediate(true);
		txtAnio.setImmediate(true);
		txtPaginaActual.setImmediate(true);
		txtPaginaActual.setId("paginaActual");
		txtCodigoDocumento.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {

			@Override
			public void handleAction(Object sender, Object target) {
				// TODO Auto-generated method stub
				if (target instanceof NumberField
						&& ((NumberField) target).getId()
								.equals("paginaActual")) {
					Long paginaActual = Long.parseLong(txtPaginaActual
							.getValue().toString());
					if (paginaActual <= Long.parseLong(lblTotalPaginas
							.getValue().toString())) {
						txtPaginaActual.setValue(paginaActual.toString());
					} else {
						txtPaginaActual.setValue(lblTotalPaginas.getValue());
					}
				} else {
					txtPaginaActual.setValue("1");
					getAllDocumentos();
				}
			}
		});

	}

	public void respuesta(Long codigo) {
		if (quienLlama instanceof ModificarDocumentoProceso) {
			ModificarDocumentoProceso panel = (ModificarDocumentoProceso) quienLlama;
			panel.obtenerDocumentoInterno(codigo);
		}
		UI.getCurrent().removeWindow(windowContiene);
	}

	@SuppressWarnings("unchecked")
	public void getAllDocumentos() {
		IndexedContainer contenedor = (IndexedContainer) tbDocumentos
				.getContainerDataSource();
		contenedor.removeAllItems();
		Dependencia dependenciaBuscar = new Dependencia();
		dependenciaBuscar.setNombre(txtDependenciaOrigen.getValue().toString());
		DocumentoInterno docInternoBuscar = new DocumentoInterno();
		docInternoBuscar.setCodigodocumento(txtCodigoDocumento.getValue()
				.toString());
		docInternoBuscar.setNumerodocumento(txtNumDocumento.getValue()
				.toString());
		docInternoBuscar.setAsunto(txtAsunto.getValue().toString());
		docInternoBuscar.setAñoDocumento(txtAnio.getValue().toString());
		docInternoBuscar.setDependencia(dependenciaBuscar);
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		Busqueda busqueda = docInternoService.buscarDocumentoInterno(
				docInternoBuscar, paginaActual, this.expedienteCanonico);
		logger.info("Dependencia Nmbre"
				+ expedienteCanonico.getDependenciaEntidad().getNombre() + "t_"
				+ busqueda.getRegistos().size());
		if (busqueda.getRegistos().size() == 0) {
			Notificacion.show(new Notificacion("No se encontraron Datos",
					Constantes.MENSAJE.TYPE_WARNING));
		} else {
			@SuppressWarnings("unchecked")
			List<DocumentoInterno> documentos = (List<DocumentoInterno>) busqueda
					.getRegistos();
			this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas() + "");
			this.txtPaginaActual.setValue(busqueda.getPaginaActual() + "");
			Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
					.toString()) - 1) * Constantes.PAGINACION.EXPEDIENTE + 1;
			for (int i = 0; i < documentos.size(); i++) {
				Item item = contenedor.addItem(i);
				item.getItemProperty("id").setValue(documentos.get(i).getId());
				item.getItemProperty("item").setValue(numeroItem++);
				item.getItemProperty("codigo").setValue(
						documentos.get(i).getCodigodocumento());
				item.getItemProperty("numero").setValue(
						documentos.get(i).getNumerodocumento());
				item.getItemProperty("anio").setValue(
						documentos.get(i).getAñoDocumento());
				item.getItemProperty("asunto").setValue(
						documentos.get(i).getAsunto());
				item.getItemProperty("dependencia").setValue(
						documentos.get(i).getDependencia().getNombre());
				item.getItemProperty("documento").setValue(
						tipoDocumentoService.obtenerTipoDocumento(
								documentos.get(i).getCodigoTipoDocumento())
								.getNombre());
			}
		}
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscar) {
			this.txtPaginaActual.setValue("1");
			getAllDocumentos();
		} else {
			if (event.getSource() == this.btnSiguiente) {
				Long paginaActual = Long.parseLong(this.txtPaginaActual
						.getValue().toString()) + 1;
				if (paginaActual <= Long.parseLong(this.lblTotalPaginas
						.getValue().toString())) {
					this.txtPaginaActual.setValue(paginaActual.toString());
				}
				getAllDocumentos();
			} else {
				if (event.getSource() == this.btnAtras) {
					Long paginaActual = Long.parseLong(this.txtPaginaActual
							.getValue().toString()) - 1;
					if (paginaActual >= 1) {
						this.txtPaginaActual.setValue(paginaActual.toString());
					}
					getAllDocumentos();
				} else {
					if (event.getSource() == this.btnInicio) {
						this.txtPaginaActual.setValue("1");
						getAllDocumentos();
					} else {
						if (event.getSource() == this.btnFinal) {
							this.txtPaginaActual.setValue(this.lblTotalPaginas
									.getValue());
							getAllDocumentos();
						}
					}
				}
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// tbDocumentos
		tbDocumentos = new Table();
		tbDocumentos.setImmediate(false);
		tbDocumentos.setWidth("720px");
		tbDocumentos.setHeight("238px");
		mainLayout.addComponent(tbDocumentos, "top:62.0px;left:20.0px;");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>C&oacute;digo: ");

		mainLayout.addComponent(label_1, "top:5.0px;left:20.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<b>N&uacute;mero: ");

		mainLayout.addComponent(label_2, "top:5.0px;left:180.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("<b>A&ntilde;o: ");

		mainLayout.addComponent(label_3, "top:5.0px;left:340.0px;");

		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("<b>Asunto: ");

		mainLayout.addComponent(label_4, "top:30.0px;left:20.0px;");

		// txtCodigoDocumento
		txtCodigoDocumento = new TextField();
		txtCodigoDocumento.setImmediate(false);
		txtCodigoDocumento.setWidth("97px");
		txtCodigoDocumento.setHeight("-1px");
		mainLayout.addComponent(txtCodigoDocumento, "top:5.0px;left:63.0px;");

		// txtNumDocumento
		txtNumDocumento = new TextField();
		txtNumDocumento.setImmediate(false);
		txtNumDocumento.setWidth("88px");
		txtNumDocumento.setHeight("-1px");
		mainLayout.addComponent(txtNumDocumento, "top:5.0px;left:240.0px;");

		// txtAnio
		txtAnio = new TextField();
		txtAnio.setImmediate(false);
		txtAnio.setWidth("90px");
		txtAnio.setHeight("-1px");
		mainLayout.addComponent(txtAnio, "top:3.0px;left:370.0px;");

		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setImmediate(true);
		btnBuscar.setWidth("100px");
		btnBuscar.setHeight("-1px");
		mainLayout.addComponent(btnBuscar, "top:31.0px;left:640.0px;");

		// txtAsunto
		txtAsunto = new TextField();
		txtAsunto.setImmediate(false);
		txtAsunto.setWidth("555px");
		txtAsunto.setHeight("-1px");
		mainLayout.addComponent(txtAsunto, "top:30.0px;left:65.0px;");

		// txtPaginaActual
		txtPaginaActual = new NumberField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("36px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:305.0px;left:360.0px;");

		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("P&aacute;gina");

		mainLayout.addComponent(label_5, "top:305.0px;left:320.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("-1px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("1");

		mainLayout.addComponent(lblTotalPaginas, "top:305.0px;left:409.0px;");

		// label_7
		label_7 = new Label();
		label_7.setImmediate(false);
		label_7.setWidth("-1px");
		label_7.setHeight("-1px");
		label_7.setValue("/");
		mainLayout.addComponent(label_7, "top:305.0px;left:400.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(false);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("25px");
		mainLayout.addComponent(btnInicio, "top:302.0px;left:243.0px;");

		// btnAtras
		btnAtras = new Boton();
		btnAtras.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAtras.setImmediate(false);
		btnAtras.setWidth("30px");
		btnAtras.setHeight("25px");
		mainLayout.addComponent(btnAtras, "top:302.0px;left:280.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png"));
		btnSiguiente.setImmediate(false);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("25px");
		mainLayout.addComponent(btnSiguiente, "top:302.0px;left:425.0px;");

		// btnFinal
		btnFinal = new Boton();
		btnFinal.setIcon(new ThemeResource("images/botones/final.png"));
		btnFinal.setImmediate(false);
		btnFinal.setWidth("30px");
		btnFinal.setHeight("25px");
		mainLayout.addComponent(btnFinal, "top:302.0px;left:460.0px;");

		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("<b>Dep Origen: ");

		mainLayout.addComponent(label_6, "top:5.0px;left:480.0px;");

		// txtDependenciaOrigen
		txtDependenciaOrigen = new TextField();
		txtDependenciaOrigen.setImmediate(false);
		txtDependenciaOrigen.setWidth("185px");
		txtDependenciaOrigen.setHeight("-1px");
		mainLayout
				.addComponent(txtDependenciaOrigen, "top:2.0px;left:555.0px;");

		return mainLayout;
	}

}
