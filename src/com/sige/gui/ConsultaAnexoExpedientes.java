package com.sige.gui;

import java.util.List;

import com.sige.entidad.AnexoPresentado;
import com.sige.entidad.DocumentoInterno;
import com.sige.entidad.DocumentoInternoDestino;
import com.sige.entidad.Expediente;
import com.sige.entidad.ExpedienteMovimiento;
import com.sige.servicio.AnexoPresentadoService;
import com.sige.servicio.DocumentoInternoDestinoService;
import com.sige.servicio.DocumentoInternoService;
import com.sige.servicio.PersonaServicio;
import com.sige.servicio.TipoDocumentoServicio;
import com.sige.util.Injector;
import com.sige.util.SigeUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;

public class ConsultaAnexoExpedientes extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnSalir;
	@AutoGenerated
	private Table tbAnexosExpediente;
	private Window windowContiene;
	private AnexoPresentadoService anexoPresentadoService;
	private DocumentoInternoService docInternoService;
	private DocumentoInternoDestinoService docInternoDestinoService;
	private TipoDocumentoServicio tipoDocumentoService;
	private AnexoPresentado anexoPresentado;
	private ExpedienteMovimiento expedienteMovimiento;
	private PersonaServicio personaService;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ConsultaAnexoExpedientes(Window windowContiene,
			ExpedienteMovimiento expedienteMovimiento) {
		personaService = Injector.obtenerServicio(PersonaServicio.class);
		tipoDocumentoService = Injector
				.obtenerServicio(TipoDocumentoServicio.class);
		docInternoDestinoService = Injector
				.obtenerServicio(DocumentoInternoDestinoService.class);
		docInternoService = Injector
				.obtenerServicio(DocumentoInternoService.class);
		anexoPresentadoService = Injector
				.obtenerServicio(AnexoPresentadoService.class);

		this.expedienteMovimiento = expedienteMovimiento;
		this.windowContiene = windowContiene;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
		getAllAnexosExpediente();
		// TODO add user code here
	}

	public void postBuild() {
		this.btnSalir.addClickListener((ClickListener) this);
		IndexedContainer contenedor = new IndexedContainer();
		contenedor.addContainerProperty("id", Long.class, null);
		contenedor.addContainerProperty("item", Long.class, null);
		contenedor.addContainerProperty("fecha", String.class, null);
		contenedor.addContainerProperty("solicitante", String.class, null);
		contenedor.addContainerProperty("asunto", String.class, null);
		contenedor.addContainerProperty("origen", String.class, null);
		contenedor.addContainerProperty("destino", String.class, null);
		tbAnexosExpediente.setContainerDataSource(contenedor);
		tbAnexosExpediente.setVisibleColumns(new Object[] { "item", "fecha",
				"solicitante", "asunto", "origen", "destino" });
		tbAnexosExpediente.setColumnHeader("item", "N°");
		tbAnexosExpediente.setColumnHeader("fecha", "Fecha Ingreso");
		tbAnexosExpediente.setColumnHeader("solicitante", "Solicitante");
		tbAnexosExpediente.setColumnHeader("asunto", "Asunto");
		tbAnexosExpediente.setColumnHeader("origen", "Dep. Origen");
		tbAnexosExpediente.setColumnHeader("destino", "Dep. Destino");

		tbAnexosExpediente.setColumnWidth("item", 15);
		tbAnexosExpediente.setColumnWidth("fecha", 100);
		tbAnexosExpediente.setColumnWidth("solicitante", 150);
		tbAnexosExpediente.setColumnWidth("asunto", 250);
		tbAnexosExpediente.setColumnWidth("origen", 185);
		tbAnexosExpediente.setColumnWidth("destino", 185);
	}

	@SuppressWarnings("unchecked")
	public void getAllAnexosExpediente() {
		Expediente expediente = expedienteMovimiento.getExpediente();
		List<AnexoPresentado> anexos = anexoPresentadoService
				.obtenerAnexosDeExpediente(expediente);
		IndexedContainer contenedor = (IndexedContainer) tbAnexosExpediente
				.getContainerDataSource();
		contenedor.removeAllItems();
		Long nroItem = 1L;
		for (int i = 0; i < anexos.size(); i++) {
			Item item = contenedor.addItem(0);
			DocumentoInterno docInterno = anexos.get(i).getDocumentoInterno();
			DocumentoInternoDestino docDestino = docInternoDestinoService
					.obtenerDocInternoDestinoPorDocInterno(docInterno
							.getCodigodocumento());
			item.getItemProperty("id").setValue(anexos.get(i).getId());
			item.getItemProperty("item").setValue(nroItem++);
			item.getItemProperty("fecha").setValue(
					SigeUtil.obtenerFormatoFecha(anexos.get(i)
							.getFechaIngreso()));
			item.getItemProperty("asunto").setValue(anexos.get(i).getAsunto());
			item.getItemProperty("solicitante").setValue(
					anexos.get(i).getSolicitante().getNombreCompleto());
			item.getItemProperty("origen").setValue(
					docInterno.getDependencia().getNombre());
			item.getItemProperty("destino").setValue(
					docDestino.getDependencia().getNombre());
		}
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnSalir) {
			UI.getCurrent().removeWindow(windowContiene);
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// tbAnexosExpediente
		tbAnexosExpediente = new Table();
		tbAnexosExpediente.setImmediate(false);
		tbAnexosExpediente.setWidth("820px");
		tbAnexosExpediente.setHeight("250px");
		mainLayout.addComponent(tbAnexosExpediente, "top:20.0px;left:20.0px;");

		// btnSalir
		btnSalir = new Button();
		btnSalir.setCaption("Salir");
		btnSalir.setIcon(new ThemeResource("images/botones/close.png"));
		btnSalir.setImmediate(false);
		btnSalir.setWidth("110px");
		btnSalir.setHeight("-1px");
		mainLayout.addComponent(btnSalir, "top:280.0px;left:380.0px;");

		return mainLayout;
	}

}
