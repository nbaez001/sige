package com.sige.gui;

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;

import com.sige.entidad.AnexoPresentado;
import com.sige.entidad.DocumentoInterno;
import com.sige.entidad.DocumentoInternoDestino;
import com.sige.entidad.DocumentoInternoReferen;
import com.sige.entidad.Expediente;
import com.sige.entidad.ExpedienteMovimiento;
import com.sige.entidad.Persona;
import com.sige.gui.ui.NumberField;
import com.sige.servicio.AnexoPresentadoService;
import com.sige.servicio.DependenciaServicio;
import com.sige.servicio.DocumentoInternoDestinoService;
import com.sige.servicio.DocumentoInternoService;
import com.sige.servicio.ExpedienteMovimientoServicio;
import com.sige.servicio.PersonaServicio;
import com.sige.servicio.UtilService;
import com.sige.util.Boton;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.SigeUtil;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.datefield.Resolution;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class AnexosExpedienteProceso extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnSalir;
	@AutoGenerated
	private Button btnGuardar;
	@AutoGenerated
	private Label label_19;
	@AutoGenerated
	private TextField textField_2;
	@AutoGenerated
	private TextField txtRecepcionadoPor;
	@AutoGenerated
	private Label label_18;
	@AutoGenerated
	private Panel panel_4;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_3;
	@AutoGenerated
	private PopupDateField fechaIngreso;
	@AutoGenerated
	private TextArea txtAObservaciones;
	@AutoGenerated
	private TextArea txtAAsunto;
	@AutoGenerated
	private Label label_17;
	@AutoGenerated
	private Label label_16;
	@AutoGenerated
	private Label label_15;
	@AutoGenerated
	private Label label_14;
	@AutoGenerated
	private NumberField txtFolios;
	@AutoGenerated
	private ComboBox cbxTipoAsunto;
	@AutoGenerated
	private Boton btnBuscarSolicitante;
	@AutoGenerated
	private Label label_13;
	@AutoGenerated
	private TextField txtNonbreSolicitanteAnexo;
	@AutoGenerated
	private TextField txtSolicitanteAnexo;
	@AutoGenerated
	private TextField txtOficinaDestinoAnexo;
	@AutoGenerated
	private NumberField txtCodigoOficinaAnexo;
	@AutoGenerated
	private Label label_12;
	@AutoGenerated
	private Label label_11;
	@AutoGenerated
	private Label label_8;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_2;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private TextField txtDependenciaActual;
	@AutoGenerated
	private TextField txtAsuntoExpediente;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private TextField txtSolicitante;
	@AutoGenerated
	private TextField txtFechaRecepcion;
	@AutoGenerated
	private NumberField txtNumeroExpediente;
	@AutoGenerated
	private NumberField txtAnioExpediente;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Boton btnBuscarExpediente;
	@AutoGenerated
	private Label label_1;
	private Window ventanaPrincipal;
	private String[] tipoAsunto = { "Observaciones", "Notificación" };
	private ExpedienteMovimientoServicio expedienteMovimientoService;
	private PersonaServicio personaService;
	private DocumentoInternoDestinoService docInternoDestinoService;
	private UtilService utilService;
	private Map<String, Integer> columnLenghts;
	private DependenciaServicio dependenciaService;
	private DocumentoInternoService documentoInternoService;
	private AnexoPresentadoService anexoPresentadoService;
	private ExpedienteMovimiento movimientoObtenido;
	private Expediente expedienteObtenido;
	private DocumentoInterno docInterno;
	private DocumentoInternoDestino docInternoDestino;
	private Persona solicitanteObtenido;
	private static final String dateFormat = "dd-MM-yyyy HH:mm:ss";

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public AnexosExpedienteProceso(Window ventanaPrincipal) {
		utilService = Injector.obtenerServicio(UtilService.class);
		dependenciaService = Injector
				.obtenerServicio(DependenciaServicio.class);
		documentoInternoService = Injector
				.obtenerServicio(DocumentoInternoService.class);
		anexoPresentadoService = Injector
				.obtenerServicio(AnexoPresentadoService.class);
		personaService = Injector.obtenerServicio(PersonaServicio.class);
		docInternoDestinoService = Injector
				.obtenerServicio(DocumentoInternoDestinoService.class);
		expedienteMovimientoService = Injector
				.obtenerServicio(ExpedienteMovimientoServicio.class);
		this.ventanaPrincipal = ventanaPrincipal;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
		llenarCombo();

		// TODO add user code here
	}

	public void postBuild() {

		label_17.setContentMode(ContentMode.HTML);
		label_16.setContentMode(ContentMode.HTML);
		label_15.setContentMode(ContentMode.HTML);
		label_14.setContentMode(ContentMode.HTML);
		label_13.setContentMode(ContentMode.HTML);
		label_12.setContentMode(ContentMode.HTML);
		label_11.setContentMode(ContentMode.HTML);
		label_8.setContentMode(ContentMode.HTML);
		label_6.setContentMode(ContentMode.HTML);
		label_5.setContentMode(ContentMode.HTML);
		label_4.setContentMode(ContentMode.HTML);
		label_3.setContentMode(ContentMode.HTML);
		label_2.setContentMode(ContentMode.HTML);
		label_1.setContentMode(ContentMode.HTML);
		label_19.setContentMode(ContentMode.HTML);
		label_18.setContentMode(ContentMode.HTML);
		this.fechaIngreso.setDateFormat(dateFormat);
		this.fechaIngreso.setInputPrompt("Fecha");

		btnBuscarExpediente.focus();
		this.fechaIngreso.setLenient(true);
		btnBuscarExpediente.setTabIndex(1);
		fechaIngreso.setTabIndex(2);
		btnBuscarSolicitante.setTabIndex(3);
		cbxTipoAsunto.setTabIndex(4);
		txtFolios.setTabIndex(5);
		txtAAsunto.setTabIndex(6);
		txtAObservaciones.setTabIndex(7);
		btnGuardar.setTabIndex(8);
		columnLenghts = utilService.getLengthColumns("anexospresentados");
		txtFolios.setMaxLength(columnLenghts.get("numerofolios"));
		txtAAsunto.setMaxLength(columnLenghts.get("asunto"));
		txtAObservaciones.setMaxLength(columnLenghts.get("observaciones"));
		this.txtAnioExpediente.setEnabled(false);
		this.txtNumeroExpediente.setEnabled(false);
		this.txtFechaRecepcion.setEnabled(false);
		this.txtSolicitante.setEnabled(false);
		this.txtAsuntoExpediente.setEnabled(false);
		this.txtDependenciaActual.setEnabled(false);
		txtSolicitanteAnexo.setEnabled(false);
		this.txtCodigoOficinaAnexo.setEnabled(false);
		this.txtOficinaDestinoAnexo.setEnabled(false);
		this.txtNonbreSolicitanteAnexo.setEnabled(false);
		this.btnBuscarExpediente.addClickListener((ClickListener) this);
		this.btnBuscarSolicitante.addClickListener((ClickListener) this);
		this.btnGuardar.addClickListener((ClickListener) this);
		this.btnSalir.addClickListener((ClickListener) this);
		this.btnBuscarExpediente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnBuscarSolicitante.setStyleName(Reindeer.BUTTON_LINK);

	}

	public void llenarCombo() {
		for (int i = 0; i < tipoAsunto.length; i++) {
			cbxTipoAsunto.addItem(i);
			cbxTipoAsunto.setItemCaption(i, tipoAsunto[i]);
		}
		cbxTipoAsunto.setValue(0);
		cbxTipoAsunto.setNullSelectionAllowed(false);
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscarExpediente) {

			Window ventana = SigeUtil.generarBuscador(new Window(),
					"BUSCAR EXPEDIENTES", "815", "435");
			ExpedienteAnexosBuscar expedienteAnexosBuscar = new ExpedienteAnexosBuscar(
					ventana, this);
			ventana.setContent(expedienteAnexosBuscar);
			UI.getCurrent().addWindow(ventana);
			expedienteAnexosBuscar.getAllExpedientes();
		} else if (event.getSource() == this.btnBuscarSolicitante) {
			Window subWindow = SigeUtil.generarBuscador(new Window(),
					"BUSCAR REPRESENTANTE", "550px", "425px");
			subWindow.setContent(new PersonaBuscar(subWindow, this));
			UI.getCurrent().addWindow(subWindow);
		} else if (event.getSource() == this.btnSalir) {
			UI.getCurrent().removeWindow(ventanaPrincipal);
		} else if (event.getSource() == this.btnGuardar) {
			if (SigeUtil.validarCamposTexto(this.txtAnioExpediente,
					this.txtAsuntoExpediente, this.txtNonbreSolicitanteAnexo,
					this.txtFolios)
					&& fechaIngreso.getValue() != null) {
				String codDocumentoInterno = SigeUtil.completarCeros(
						documentoInternoService.obtenerUltimoCorrelativo()
								.toString(), 8, 1);
				Calendar calendario = Calendar.getInstance();
				DocumentoInterno documentoInternoGuardar = new DocumentoInterno();
				documentoInternoGuardar.setCodigodocumento(codDocumentoInterno);
				documentoInternoGuardar.setAsunto(txtAAsunto.getValue()
						.toUpperCase());
				documentoInternoGuardar.setDependencia(dependenciaService
						.obtener(dependenciaService.getCodigoMesaPartes()));
				documentoInternoGuardar.setAñoDocumento(calendario
						.get(Calendar.YEAR) + "");
				documentoInternoGuardar.setCodigoTipoDocumento("34");
				documentoInternoGuardar.setCopiaArchivo(Boolean.FALSE);
				Long numDocumento = documentoInternoService
						.obtenerNumDocumento(dependenciaService
								.obtener(dependenciaService
										.getCodigoMesaPartes()));
				documentoInternoGuardar.setNumerodocumento(SigeUtil
						.completarCeros(numDocumento.toString(), 5, 1));
				Date date = new Date();
				Timestamp fechaHora = new Timestamp(date.getTime());
				documentoInternoGuardar.setFechadocumento(fechaHora);
				documentoInternoGuardar.setNumerofolios(Short
						.parseShort(txtFolios.getValue().toString()));
				documentoInternoGuardar.setSiglasdocumento("");

				// Documento Interno Referencia
				DocumentoInternoReferen docInternoReferen = new DocumentoInternoReferen();
				docInternoReferen.setCodigoDocumento(documentoInternoGuardar
						.getCodigodocumento());
				docInternoReferen
						.setCodigoDocumentoReferencia(expedienteMovimientoService
								.obtenerPrimerMovimientoExpediente(
										expedienteObtenido)
								.getDocumentoInterno().getCodigodocumento());
				docInternoReferen.setOrden(new Short("1"));

				DocumentoInternoDestino docInternoDestinoGuardar = new DocumentoInternoDestino();
				docInternoDestinoGuardar
						.setDocumentoInterno(documentoInternoGuardar);
				docInternoDestinoGuardar.setDependencia(docInternoDestino
						.getDependencia());
				docInternoDestinoGuardar.setOrden(new Short("1"));
				docInternoDestinoGuardar.setTipoMovimiento('0');

				AnexoPresentado anexoPresentadoGuardar = new AnexoPresentado();
				String correlativoAnexo = SigeUtil.completarCeros(
						anexoPresentadoService.obtenerCorrelativo(
								expedienteObtenido).toString(), 2, 1);
				anexoPresentadoGuardar.setCodanexo(expedienteObtenido
						.getCodigo() + correlativoAnexo);
				anexoPresentadoGuardar.setExpediente(expedienteObtenido);
				anexoPresentadoGuardar.setCorrelativo(correlativoAnexo);
				anexoPresentadoGuardar.setFechaIngreso(new Timestamp(SigeUtil
						.obtenerFechaFormato(
								fechaIngreso.getValue().toString(), 0)
						.getTime()));
				anexoPresentadoGuardar.setSolicitante(solicitanteObtenido);
				anexoPresentadoGuardar.setDependencia(docInternoDestino
						.getDependencia());
				anexoPresentadoGuardar
						.setDocumentoInterno(documentoInternoGuardar);
				anexoPresentadoGuardar.setNumeroFolios(txtFolios.getValue()
						.toString());
				anexoPresentadoGuardar.setAsunto(txtAAsunto.getValue()
						.toString().toUpperCase());
				anexoPresentadoGuardar.setObservaciones(txtAObservaciones
						.getValue().toString().toUpperCase());
				anexoPresentadoGuardar.setCodigoTipoPedido(cbxTipoAsunto
						.getValue().toString());
				anexoPresentadoService.AnexarExpediente(anexoPresentadoGuardar,
						documentoInternoGuardar, docInternoDestinoGuardar,
						docInternoReferen);
				Notificacion.show(new Notificacion(
						"Se grabó con éxito el anexo del expediente  <b>"
								+ expedienteObtenido.getCodigo(),
						Constantes.MENSAJE.TYPE_SUCCES));
				resetearFormulario();

			} else {
				Notificacion.show(new Notificacion(
						"Debe Rellenar todos los campos",
						Constantes.MENSAJE.TYPE_WARNING));
			}

		}
	}

	public void getDatosExpediente(Long codMovimiento) {
		movimientoObtenido = expedienteMovimientoService.obtener(codMovimiento);
		expedienteObtenido = movimientoObtenido.getExpediente();
		docInterno = movimientoObtenido.getDocumentoInterno();
		docInternoDestino = docInternoDestinoService
				.obtenerDocInternoDestinoPorDocInterno(docInterno
						.getCodigodocumento());
		this.txtAnioExpediente.setValue(expedienteObtenido.getAnio());
		this.txtNumeroExpediente.setValue(expedienteObtenido.getNumero());
		this.txtFechaRecepcion.setValue(SigeUtil
				.obtenerFormatoFecha(docInternoDestino.getFechaRecepcion()));
		this.txtSolicitante.setValue(expedienteObtenido.getSolicitante()
				.getNombreCompleto());
		this.txtAsuntoExpediente.setValue(expedienteObtenido.getAsunto());
		this.txtDependenciaActual.setValue(docInternoDestino.getDependencia()
				.getNombre());
		this.txtOficinaDestinoAnexo.setValue(docInternoDestino.getDependencia()
				.getNombre());
		this.txtCodigoOficinaAnexo.setValue(docInternoDestino.getDependencia()
				.getId().toString());

	}

	public void getDatosPersona(Long codPersona) {
		solicitanteObtenido = personaService.obtener(codPersona);
		txtSolicitanteAnexo.setValue(solicitanteObtenido.getCodigoPersona());
		txtNonbreSolicitanteAnexo.setValue(solicitanteObtenido
				.getNombreCompleto());
	}

	public void resetearFormulario() {
		txtDependenciaActual.setValue("");
		txtAnioExpediente.setValue("");
		txtNumeroExpediente.setValue("");
		txtFechaRecepcion.setValue("");
		txtSolicitante.setValue("");
		txtAsuntoExpediente.setValue("");
		fechaIngreso.setValue(null);
		txtOficinaDestinoAnexo.setValue("");
		txtCodigoOficinaAnexo.setValue("");
		txtSolicitante.setValue("");
		txtSolicitanteAnexo.setValue("");
		txtNonbreSolicitanteAnexo.setValue("");
		txtFolios.setValue("");
		txtAAsunto.setValue("");
		txtAObservaciones.setValue("");
		txtFechaRecepcion.setValue("");
		txtRecepcionadoPor.setValue("");

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel_2
		panel_2 = buildPanel_2();
		mainLayout.addComponent(panel_2, "top:7.0px;left:18.0px;");

		// panel_4
		panel_4 = buildPanel_4();
		mainLayout.addComponent(panel_4, "top:130.0px;left:18.0px;");

		// label_18
		label_18 = new Label();
		label_18.setImmediate(false);
		label_18.setWidth("-1px");
		label_18.setHeight("-1px");
		label_18.setValue("<b>Recepcionado Por: ");
		mainLayout.addComponent(label_18, "top:382.0px;left:28.0px;");

		// txtRecepcionadoPor
		txtRecepcionadoPor = new TextField();
		txtRecepcionadoPor.setImmediate(false);
		txtRecepcionadoPor.setWidth("372px");
		txtRecepcionadoPor.setHeight("-1px");
		mainLayout.addComponent(txtRecepcionadoPor, "top:400.0px;left:28.0px;");

		// textField_2
		textField_2 = new TextField();
		textField_2.setImmediate(false);
		textField_2.setWidth("240px");
		textField_2.setHeight("-1px");
		mainLayout.addComponent(textField_2, "top:400.0px;left:420.0px;");

		// label_19
		label_19 = new Label();
		label_19.setImmediate(false);
		label_19.setWidth("-1px");
		label_19.setHeight("-1px");
		label_19.setValue("<b>Fecha Recepci&oacute;n: ");
		mainLayout.addComponent(label_19, "top:382.0px;left:420.0px;");

		// btnGuardar
		btnGuardar = new Button();
		btnGuardar.setCaption("Guardar");
		btnGuardar.setIcon(new ThemeResource("images/botones/save.png"));
		btnGuardar.setImmediate(true);
		btnGuardar.setWidth("110px");
		btnGuardar.setHeight("-1px");
		mainLayout.addComponent(btnGuardar, "top:440.0px;left:290.0px;");

		// btnSalir
		btnSalir = new Button();
		btnSalir.setCaption("Salir");
		btnSalir.setIcon(new ThemeResource("images/botones/close.png"));
		btnSalir.setImmediate(true);
		btnSalir.setWidth("110px");
		btnSalir.setHeight("-1px");
		mainLayout.addComponent(btnSalir, "top:440.0px;left:420.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setImmediate(false);
		panel_2.setWidth("822px");
		panel_2.setHeight("122px");

		// absoluteLayout_2
		absoluteLayout_2 = buildAbsoluteLayout_2();
		panel_2.setContent(absoluteLayout_2);

		return panel_2;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_2() {
		// common part: create layout
		absoluteLayout_2 = new AbsoluteLayout();
		absoluteLayout_2.setImmediate(false);
		absoluteLayout_2.setWidth("100.0%");
		absoluteLayout_2.setHeight("100.0%");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<font color=\"red\"><b>Datos del Expediente:</font>");
		absoluteLayout_2.addComponent(label_1, "top:0.0px;left:21.0px;");

		// btnBuscarExpediente
		btnBuscarExpediente = new Boton();
		btnBuscarExpediente
				.setIcon(new ThemeResource("images/botones/find.png"));
		btnBuscarExpediente.setImmediate(false);
		btnBuscarExpediente.setDescription("Buscar Expediente");
		btnBuscarExpediente.setWidth("30px");
		btnBuscarExpediente.setHeight("25px");
		absoluteLayout_2.addComponent(btnBuscarExpediente,
				"top:35.0px;left:17.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<b>Año - N&uacute;mero ");
		absoluteLayout_2.addComponent(label_2, "top:18.0px;left:41.0px;");

		// txtAnioExpediente
		txtAnioExpediente = new NumberField();
		txtAnioExpediente.setImmediate(false);
		txtAnioExpediente.setWidth("50px");
		txtAnioExpediente.setHeight("-1px");
		absoluteLayout_2.addComponent(txtAnioExpediente,
				"top:35.0px;left:41.0px;");

		// txtNumeroExpediente
		txtNumeroExpediente = new NumberField();
		txtNumeroExpediente.setImmediate(false);
		txtNumeroExpediente.setWidth("-1px");
		txtNumeroExpediente.setHeight("-1px");
		absoluteLayout_2.addComponent(txtNumeroExpediente,
				"top:36.0px;left:91.0px;");

		// txtFechaRecepcion
		txtFechaRecepcion = new TextField();
		txtFechaRecepcion.setImmediate(false);
		txtFechaRecepcion.setWidth("-1px");
		txtFechaRecepcion.setHeight("-1px");
		absoluteLayout_2.addComponent(txtFechaRecepcion,
				"top:36.0px;left:281.0px;");

		// txtSolicitante
		txtSolicitante = new TextField();
		txtSolicitante.setImmediate(false);
		txtSolicitante.setWidth("330px");
		txtSolicitante.setHeight("-1px");
		absoluteLayout_2.addComponent(txtSolicitante,
				"top:35.0px;left:481.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("<b>Fecha Recepci&oacute;n: ");
		absoluteLayout_2.addComponent(label_3, "top:18.0px;left:281.0px;");

		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("<b>Solicitante : ");
		absoluteLayout_2.addComponent(label_4, "top:18.0px;left:481.0px;");

		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("<b>Asunto: ");
		absoluteLayout_2.addComponent(label_5, "top:65.0px;left:4.0px;");

		// txtAsuntoExpediente
		txtAsuntoExpediente = new TextField();
		txtAsuntoExpediente.setImmediate(false);
		txtAsuntoExpediente.setWidth("761px");
		txtAsuntoExpediente.setHeight("-1px");
		absoluteLayout_2.addComponent(txtAsuntoExpediente,
				"top:62.0px;left:50.0px;");

		// txtDependenciaActual
		txtDependenciaActual = new TextField();
		txtDependenciaActual.setImmediate(false);
		txtDependenciaActual.setWidth("710px");
		txtDependenciaActual.setHeight("-1px");
		absoluteLayout_2.addComponent(txtDependenciaActual,
				"top:90.0px;left:101.0px;");

		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("<b>Depend. Actual: ");
		absoluteLayout_2.addComponent(label_6, "top:94.0px;left:4.0px;");

		return absoluteLayout_2;
	}

	@AutoGenerated
	private Panel buildPanel_4() {
		// common part: create layout
		panel_4 = new Panel();
		panel_4.setImmediate(false);
		panel_4.setWidth("822px");
		panel_4.setHeight("230px");

		// absoluteLayout_3
		absoluteLayout_3 = buildAbsoluteLayout_3();
		panel_4.setContent(absoluteLayout_3);

		return panel_4;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_3() {
		// common part: create layout
		absoluteLayout_3 = new AbsoluteLayout();
		absoluteLayout_3.setImmediate(false);
		absoluteLayout_3.setWidth("100.0%");
		absoluteLayout_3.setHeight("100.0%");

		// label_8
		label_8 = new Label();
		label_8.setImmediate(false);
		label_8.setWidth("-1px");
		label_8.setHeight("-1px");
		label_8.setValue("<font color=\"red\"><b>Datos del Anexo:</font>");
		absoluteLayout_3.addComponent(label_8, "top:3.0px;left:21.0px;");

		// label_11
		label_11 = new Label();
		label_11.setImmediate(false);
		label_11.setWidth("-1px");
		label_11.setHeight("-1px");
		label_11.setValue("<b>Fecha Ingreso: ");
		absoluteLayout_3.addComponent(label_11, "top:21.0px;left:21.0px;");

		// label_12
		label_12 = new Label();
		label_12.setImmediate(false);
		label_12.setWidth("-1px");
		label_12.setHeight("-1px");
		label_12.setValue("<b>Oficina Destino ");
		absoluteLayout_3.addComponent(label_12, "top:21.0px;left:341.0px;");

		// txtCodigoOficinaAnexo
		txtCodigoOficinaAnexo = new NumberField();
		txtCodigoOficinaAnexo.setImmediate(false);
		txtCodigoOficinaAnexo.setWidth("44px");
		txtCodigoOficinaAnexo.setHeight("-1px");
		absoluteLayout_3.addComponent(txtCodigoOficinaAnexo,
				"top:39.0px;left:341.0px;");

		// txtOficinaDestinoAnexo
		txtOficinaDestinoAnexo = new TextField();
		txtOficinaDestinoAnexo.setImmediate(false);
		txtOficinaDestinoAnexo.setWidth("426px");
		txtOficinaDestinoAnexo.setHeight("-1px");
		absoluteLayout_3.addComponent(txtOficinaDestinoAnexo,
				"top:39.0px;left:385.0px;");

		// txtSolicitanteAnexo
		txtSolicitanteAnexo = new TextField();
		txtSolicitanteAnexo.setImmediate(false);
		txtSolicitanteAnexo.setWidth("75px");
		txtSolicitanteAnexo.setHeight("-1px");
		absoluteLayout_3.addComponent(txtSolicitanteAnexo,
				"top:85.0px;left:116.0px;");

		// txtNonbreSolicitanteAnexo
		txtNonbreSolicitanteAnexo = new TextField();
		txtNonbreSolicitanteAnexo.setImmediate(false);
		txtNonbreSolicitanteAnexo.setWidth("270px");
		txtNonbreSolicitanteAnexo.setHeight("-1px");
		absoluteLayout_3.addComponent(txtNonbreSolicitanteAnexo,
				"top:85.0px;left:191.0px;");

		// label_13
		label_13 = new Label();
		label_13.setImmediate(false);
		label_13.setWidth("-1px");
		label_13.setHeight("-1px");
		label_13.setValue("<b>Solicitante: ");
		absoluteLayout_3.addComponent(label_13, "top:91.0px;left:4.0px;");

		// btnBuscarSolicitante
		btnBuscarSolicitante = new Boton();
		btnBuscarSolicitante.setIcon(new ThemeResource(
				"images/botones/find.png"));
		btnBuscarSolicitante.setImmediate(false);
		btnBuscarSolicitante.setDescription("Buscar Solicitante");
		btnBuscarSolicitante.setWidth("30px");
		btnBuscarSolicitante.setHeight("25px");
		absoluteLayout_3.addComponent(btnBuscarSolicitante,
				"top:90.0px;left:90.0px;");

		// cbxTipoAsunto
		cbxTipoAsunto = new ComboBox();
		cbxTipoAsunto.setImmediate(false);
		cbxTipoAsunto.setWidth("238px");
		cbxTipoAsunto.setHeight("-1px");
		absoluteLayout_3
				.addComponent(cbxTipoAsunto, "top:85.0px;left:483.0px;");

		// txtFolios
		txtFolios = new NumberField();
		txtFolios.setImmediate(false);
		txtFolios.setWidth("70px");
		txtFolios.setHeight("-1px");
		absoluteLayout_3.addComponent(txtFolios, "top:85.0px;left:741.0px;");

		// label_14
		label_14 = new Label();
		label_14.setImmediate(false);
		label_14.setWidth("-1px");
		label_14.setHeight("-1px");
		label_14.setValue("<b>Tipo Asunto al que responde: ");
		absoluteLayout_3.addComponent(label_14, "top:67.0px;left:483.0px;");

		// label_15
		label_15 = new Label();
		label_15.setImmediate(false);
		label_15.setWidth("-1px");
		label_15.setHeight("-1px");
		label_15.setValue("<b>Folios: ");
		absoluteLayout_3.addComponent(label_15, "top:67.0px;left:741.0px;");

		// label_16
		label_16 = new Label();
		label_16.setImmediate(false);
		label_16.setWidth("-1px");
		label_16.setHeight("-1px");
		label_16.setValue("<b>Asunto: ");
		absoluteLayout_3.addComponent(label_16, "top:129.0px;left:4.0px;");

		// label_17
		label_17 = new Label();
		label_17.setImmediate(false);
		label_17.setWidth("-1px");
		label_17.setHeight("-1px");
		label_17.setValue("<b>Observaciones: ");
		absoluteLayout_3.addComponent(label_17, "top:129.0px;left:401.0px;");

		// txtAAsunto
		txtAAsunto = new TextArea();
		txtAAsunto.setImmediate(false);
		txtAAsunto.setWidth("372px");
		txtAAsunto.setHeight("72px");
		absoluteLayout_3.addComponent(txtAAsunto, "top:147.0px;left:9.0px;");

		// txtAObservaciones
		txtAObservaciones = new TextArea();
		txtAObservaciones.setImmediate(false);
		txtAObservaciones.setWidth("410px");
		txtAObservaciones.setHeight("72px");
		absoluteLayout_3.addComponent(txtAObservaciones,
				"top:147.0px;left:401.0px;");

		// fechaIngreso
		fechaIngreso = new PopupDateField();
		fechaIngreso.setImmediate(false);
		fechaIngreso.setWidth("-1px");
		fechaIngreso.setHeight("-1px");
		fechaIngreso.setResolution(Resolution.SECOND);
		absoluteLayout_3.addComponent(fechaIngreso, "top:39.0px;left:21.0px;");

		return absoluteLayout_3;
	}

}
