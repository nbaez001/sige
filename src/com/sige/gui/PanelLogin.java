package com.sige.gui;

import java.util.Map;

import com.sige.entidad.Usuario;
import com.sige.servicio.UsuarioServicio;
import com.sige.servicio.UtilService;
import com.sige.util.Injector;
import com.sige.util.SigeUtil;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

public class PanelLogin extends CustomComponent implements ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel pnlLogin;

	@AutoGenerated
	private AbsoluteLayout loginLayout;

	@AutoGenerated
	private Label lblError;

	@AutoGenerated
	private Embedded logoSeguridad;

	@AutoGenerated
	private PasswordField pwfContrasena;

	@AutoGenerated
	private VerticalLayout pieLayout;

	@AutoGenerated
	private Label lblPie;

	@AutoGenerated
	private Button btnLogin;

	@AutoGenerated
	private Label lblContrasena;

	@AutoGenerated
	private TextField txtUsuario;

	@AutoGenerated
	private Label lblUsuario;
	
	@AutoGenerated
	private Button btnConsulta;

	private static final long serialVersionUID = 4091056325374984178L;

	private UsuarioServicio usuarioServicio;

	private UtilService utilService;

	private Map<String, Integer> usuarioColumnLenghts;

	public PanelLogin() {
		usuarioServicio = Injector.obtenerServicio(UsuarioServicio.class);
		utilService = Injector.obtenerServicio(UtilService.class);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
	}

	private void postBuild() {
		lblContrasena.setContentMode(ContentMode.HTML);
		lblPie.setContentMode(ContentMode.HTML);
		usuarioColumnLenghts = utilService.getLengthColumns("usuario");
		btnLogin.setHtmlContentAllowed(true);
		btnConsulta.setHtmlContentAllowed(true);
		txtUsuario.focus();
		pieLayout.setStyleName("pieLogin");
		btnLogin.addClickListener((ClickListener) this);
		btnConsulta.addClickListener((ClickListener) this);
		lblError.setValue("");
		lblError.setStyleName("errorLogueo");
		txtUsuario.setMaxLength(usuarioColumnLenghts.get("usuario"));
		pwfContrasena.setMaxLength(usuarioColumnLenghts.get("contrasenha"));
		txtUsuario.addShortcutListener(new ShortcutListener("", KeyCode.ENTER,
				null) {
			private static final long serialVersionUID = 1L;

			@Override
			public void handleAction(Object sender, Object target) {
				handleActionEnter();
			}
		});
		pwfContrasena.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {
			private static final long serialVersionUID = 1L;

			@Override
			public void handleAction(Object sender, Object target) {
				handleActionEnter();
			}
		});
	}

	private void handleActionEnter() {
		try {
			login();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void buttonClick(ClickEvent event) {
		if (event.getButton().equals(btnLogin)) {
			login();
		}
		if (event.getButton().equals(btnConsulta)) {
			Window ventana = SigeUtil.generarBuscador(new Window(),"CONSULTA DE EXPEDIENTES", "720", "340");
			ventana.setContent(new ExpedienteMovimientoConsultar());
			UI.getCurrent().addWindow(ventana);
			//ExpedienteMovimientoConsultar panel = new ExpedienteMovimientoConsultar();
			//((SigeUI) UI.getCurrent()).setContent(panel);
		}
	}

	private void login() {
		String usuario = txtUsuario.getValue();
		String clave = pwfContrasena.getValue().trim();

		if (usuario == null || usuario.trim().length() == 0) {
			return;
		}

		if (clave == null || clave.trim().length() == 0) {
			return;
		}
		Usuario validarUsuario = new Usuario();
		validarUsuario.setUsuario(usuario);
		validarUsuario.setContrasenha(clave);
		Usuario usuarioSession = usuarioServicio.iniciarSession(validarUsuario);
		if (usuarioSession != null) {
			SigeUtil.asignarUsuarioSesion(usuarioSession.getUsuario());
			SigeUtil.asignarCodigoUsuarioSesion(usuarioSession.getId());
			((SigeUI) UI.getCurrent()).cargarPanelPrincipal();
		} else {
			lblError.setValue("Usuario o contraseña incorrecta");
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// pnlLogin
		pnlLogin = buildPnlLogin();
		mainLayout.addComponent(pnlLogin);
		mainLayout.setComponentAlignment(pnlLogin, new Alignment(48));

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPnlLogin() {
		// common part: create layout
		pnlLogin = new Panel();
		pnlLogin.setImmediate(false);
		pnlLogin.setWidth("407px");
		pnlLogin.setHeight("318px");

		// loginLayout
		loginLayout = buildLoginLayout();
		pnlLogin.setContent(loginLayout);

		return pnlLogin;
	}

	@AutoGenerated
	private AbsoluteLayout buildLoginLayout() {
		// common part: create layout
		loginLayout = new AbsoluteLayout();
		loginLayout.setImmediate(false);
		loginLayout.setWidth("100.0%");
		loginLayout.setHeight("100.0%");

		// lblUsuario
		lblUsuario = new Label();
		lblUsuario.setImmediate(false);
		lblUsuario.setWidth("-1px");
		lblUsuario.setHeight("-1px");
		lblUsuario.setValue("Usuario");
		loginLayout.addComponent(lblUsuario, "top:101.0px;left:23.0px;");

		// txtUsuario
		txtUsuario = new TextField();
		txtUsuario.setImmediate(false);
		txtUsuario.setWidth("347px");
		txtUsuario.setHeight("25px");
		txtUsuario.setTabIndex(1);
		loginLayout.addComponent(txtUsuario, "top:119.0px;left:24.0px;");

		// lblContrasena
		lblContrasena = new Label();
		lblContrasena.setImmediate(false);
		lblContrasena.setWidth("-1px");
		lblContrasena.setHeight("-1px");
		lblContrasena.setValue("Contrase&ntilde;a");
		loginLayout.addComponent(lblContrasena, "top:158.0px;left:21.0px;");

		// btnLogin
		btnLogin = new Button();
		btnLogin.setCaption("Iniciar Sesi&oacute;n");
		btnLogin.setImmediate(true);
		btnLogin.setWidth("-1px");
		btnLogin.setHeight("-1px");
		btnLogin.setTabIndex(3);
		loginLayout.addComponent(btnLogin, "top:229.0px;left:254.0px;");

		// btnConsulta
		btnConsulta = new Button();
		btnConsulta.setCaption("Consultar Expediente");
		btnConsulta.setImmediate(true);
		btnConsulta.setWidth("-1px");
		btnConsulta.setHeight("-1px");
		btnConsulta.setTabIndex(4);
		btnConsulta.setIcon(new ThemeResource("images/botones/consult.png"));
		loginLayout.addComponent(btnConsulta, "top:229.0px;left:23.0px;");
		
		// pieLayout
		pieLayout = buildPieLayout();
		loginLayout.addComponent(pieLayout,
				"top:269.0px;bottom:0.0px;left:0.0px;");

		// pwfContrasena
		pwfContrasena = new PasswordField();
		pwfContrasena.setImmediate(false);
		pwfContrasena.setWidth("347px");
		pwfContrasena.setHeight("25px");
		pwfContrasena.setTabIndex(2);
		loginLayout.addComponent(pwfContrasena, "top:177.0px;left:23.0px;");

		// logoSeguridad
		logoSeguridad = new Embedded();
		logoSeguridad.setImmediate(false);
		logoSeguridad.setWidth("100.0%");
		logoSeguridad.setHeight("80px");
		logoSeguridad.setSource(new ThemeResource("images/seguridad-logo.jpg"));
		logoSeguridad.setType(1);
		logoSeguridad.setMimeType("image/jpg");
		loginLayout.addComponent(logoSeguridad, "top:0.0px;left:0.0px;");

		// lblError
		lblError = new Label();
		lblError.setImmediate(false);
		lblError.setWidth("-1px");
		lblError.setHeight("-1px");
		lblError.setValue("Label");
		loginLayout.addComponent(lblError, "top:222.0px;left:24.0px;");

		return loginLayout;
	}

	@AutoGenerated
	private VerticalLayout buildPieLayout() {
		// common part: create layout
		pieLayout = new VerticalLayout();
		pieLayout.setImmediate(false);
		pieLayout.setWidth("100.0%");
		pieLayout.setHeight("100.0%");
		pieLayout.setMargin(false);

		// lblPie
		lblPie = new Label();
		lblPie.setImmediate(false);
		lblPie.setWidth("-1px");
		lblPie.setHeight("-1px");
		lblPie.setValue("Sistema Integrado de Gesti&oacute;n de Expedientes");
		pieLayout.addComponent(lblPie);
		pieLayout.setComponentAlignment(lblPie, new Alignment(48));

		return pieLayout;
	}

}
