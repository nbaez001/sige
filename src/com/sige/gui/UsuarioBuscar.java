package com.sige.gui;

import java.util.List;

import com.sige.entidad.Usuario;
import com.sige.servicio.UsuarioServicio;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class UsuarioBuscar extends CustomComponent implements ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private TextField txtPaginaActual;
	@AutoGenerated
	private Boton btnFinal;
	@AutoGenerated
	private Boton btnAtras;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Table tbUsuarios;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private TextField txtNombres;
	@AutoGenerated
	private Label label_1;
	private Window windowContiene;
	private UsuarioServicio usuarioService;
	private CustomComponent quienLlama;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public UsuarioBuscar(Window windowContiene, CustomComponent quienLlama) {
		usuarioService = Injector.obtenerServicio(UsuarioServicio.class);
		this.quienLlama = quienLlama;
		this.windowContiene = windowContiene;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
		getAllUsuarios();

		// TODO add user code here
	}

	public void postBuild() {
		this.btnBuscar.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnAtras.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnFinal.addClickListener((ClickListener) this);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.btnAtras.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFinal.setStyleName(Reindeer.BUTTON_LINK);
		this.btnBuscar.setStyleName("buscar");
		this.txtPaginaActual.setValue("1");
		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class, null);
		container.addContainerProperty("item", Long.class, null);
		container.addContainerProperty("usuario", String.class, null);
		container.addContainerProperty("nombres", String.class, null);

		tbUsuarios.setContainerDataSource(container);
		tbUsuarios.setVisibleColumns(new Object[] { "item", "usuario",
				"nombres" });
		tbUsuarios.setColumnWidth("item", 25);
		tbUsuarios.setColumnWidth("usuario", 100);
		tbUsuarios.setColumnWidth("nombres", 260);

		tbUsuarios.setColumnHeader("item", "Item");
		tbUsuarios.setColumnHeader("usuario", "Usuario");
		tbUsuarios.setColumnHeader("nombres", "Nombres");
		tbUsuarios.setSelectable(true);
		tbUsuarios.setImmediate(true);
		tbUsuarios.addItemClickListener(new ItemClickListener() {

			@Override
			public void itemClick(ItemClickEvent event) {
				// TODO Auto-generated method stub
				if (event.isDoubleClick()) {
					Item item = tbUsuarios.getItem(event.getItemId());
					respuesta(Long.parseLong(item.getItemProperty("id")
							.getValue().toString()));
				}
			}
		});
	}

	public void respuesta(Long codUsuario) {
		if (quienLlama instanceof ExpedienteConsulta) {
			ExpedienteConsulta panel = (ExpedienteConsulta) quienLlama;
			panel.obtenerTerminalista(codUsuario);
		}
		UI.getCurrent().removeWindow(windowContiene);
	}

	@SuppressWarnings("unchecked")
	private void getAllUsuarios() {
		IndexedContainer container = (IndexedContainer) tbUsuarios
				.getContainerDataSource();
		container.removeAllItems();

		List<Usuario> usuariosListado = null;
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		Usuario usuarioBuscar = new Usuario();
		usuarioBuscar.setUsuario("");
		usuarioBuscar.setNombres(this.txtNombres.getValue().toString());
		Busqueda busqueda = usuarioService.buscarPorUsuario(usuarioBuscar,
				paginaActual);
		usuariosListado = (List<Usuario>) busqueda.getRegistos();
		this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas().toString());
		this.txtPaginaActual.setValue(busqueda.getPaginaActual().toString());

		Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
				.toString()) - 1) * Constantes.PAGINACION.USUARIO + 1;
		for (int i = 0; i < usuariosListado.size(); i++) {
			Item item = container.addItem(i);
			item.getItemProperty("id").setValue(usuariosListado.get(i).getId());
			item.getItemProperty("item").setValue(numeroItem++);
			item.getItemProperty("usuario").setValue(
					usuariosListado.get(i).getUsuario());
			item.getItemProperty("nombres").setValue(
					usuariosListado.get(i).getNombres());
		}
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscar) {
			txtPaginaActual.setValue("1");
			getAllUsuarios();
		} else {
			if (event.getSource() == this.btnSiguiente) {
				Long paginaActual = Long.parseLong(this.txtPaginaActual
						.getValue().toString()) + 1;
				if (paginaActual <= Long.parseLong(this.lblTotalPaginas
						.getValue().toString())) {
					this.txtPaginaActual.setValue(paginaActual.toString());
				}
				getAllUsuarios();
			} else {
				if (event.getSource() == this.btnAtras) {
					Long paginaActual = Long.parseLong(this.txtPaginaActual
							.getValue().toString()) - 1;
					if (paginaActual >= 1) {
						this.txtPaginaActual.setValue(paginaActual.toString());
					}
					getAllUsuarios();
				} else {
					if (event.getSource() == this.btnInicio) {
						this.txtPaginaActual.setValue("1");
						getAllUsuarios();
					} else {
						if (event.getSource() == this.btnFinal) {
							this.txtPaginaActual.setValue(this.lblTotalPaginas
									.getValue());
							getAllUsuarios();
						}
					}
				}
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>Nombres: ");
		label_1.setContentMode(ContentMode.HTML);
		mainLayout.addComponent(label_1, "top:20.0px;left:20.0px;");

		// txtNombres
		txtNombres = new TextField();
		txtNombres.setImmediate(false);
		txtNombres.setWidth("260px");
		txtNombres.setHeight("-1px");
		mainLayout.addComponent(txtNombres, "top:16.0px;left:80.0px;");

		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setIcon(new ThemeResource("images/botones/find.png"));
		btnBuscar.setImmediate(false);
		btnBuscar.setWidth("110px");
		btnBuscar.setHeight("-1px");
		mainLayout.addComponent(btnBuscar, "top:16.0px;left:345.0px;");

		// tbUsuarios
		tbUsuarios = new Table();
		tbUsuarios.setImmediate(false);
		tbUsuarios.setWidth("440px");
		tbUsuarios.setHeight("200px");
		mainLayout.addComponent(tbUsuarios, "top:60.0px;left:20.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(false);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("25px");
		mainLayout.addComponent(btnInicio, "top:264.0px;left:130.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png"));
		btnSiguiente.setImmediate(false);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("25px");
		mainLayout.addComponent(btnSiguiente, "top:264.0px;left:280.0px;");

		// btnAtras
		btnAtras = new Boton();
		btnAtras.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAtras.setImmediate(false);
		btnAtras.setWidth("30px");
		btnAtras.setHeight("25px");
		mainLayout.addComponent(btnAtras, "top:264.0px;left:170.0px;");

		// btnFinal
		btnFinal = new Boton();
		btnFinal.setIcon(new ThemeResource("images/botones/final.png"));
		btnFinal.setImmediate(false);
		btnFinal.setWidth("30px");
		btnFinal.setHeight("25px");
		mainLayout.addComponent(btnFinal, "top:264.0px;left:320.0px;");

		// txtPaginaActual
		txtPaginaActual = new TextField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("32px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:265.0px;left:208.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("/ ");
		mainLayout.addComponent(label_2, "top:271.0px;left:245.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("-1px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("1");
		mainLayout.addComponent(lblTotalPaginas, "top:271.0px;left:260.0px;");

		return mainLayout;
	}

}
