package com.sige.gui;

import java.util.List;
import java.util.Map;

import com.sige.entidad.TipoDocumento;
import com.sige.gui.ui.NumberField;
import com.sige.servicio.TipoDocumentoServicio;
import com.sige.servicio.UtilService;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class TipoDocumentoBuscar extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Boton btnFinal;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private NumberField txtPaginaActual;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private Boton btnAtras;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private TextField txtNombre;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private Table tbTipoDocumento;
	private Window windowContiene;
	private CustomComponent quienLlama;
	private UtilService utilService;
	private Map<String, Integer> columnLenghts;
	private TipoDocumentoServicio documentoServicio;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TipoDocumentoBuscar(Window windowContiene, CustomComponent quienLlama) {
		utilService = Injector.obtenerServicio(UtilService.class);
		documentoServicio = Injector
				.obtenerServicio(TipoDocumentoServicio.class);
		buildMainLayout();
		this.quienLlama = quienLlama;
		this.windowContiene = windowContiene;
		setCompositionRoot(mainLayout);
		postBuild();
		getAllTipoDocumento();

		// TODO add user code here
	}

	public void postBuild() {

		label_3.setContentMode(ContentMode.HTML);
		label_1.setContentMode(ContentMode.HTML);

		columnLenghts = utilService.getLengthColumns("tipodocumento");
		this.txtNombre.setMaxLength(columnLenghts.get("nombre"));
		this.btnBuscar.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnAtras.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnFinal.addClickListener((ClickListener) this);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.btnAtras.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFinal.setStyleName(Reindeer.BUTTON_LINK);
		this.txtPaginaActual.setValue("1");
		this.txtPaginaActual.setId("paginaActual");
		this.txtPaginaActual.setImmediate(true);
		this.txtNombre.setId("nombre");
		this.txtNombre.setImmediate(true);
		this.txtNombre.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {

			@Override
			public void handleAction(Object sender, Object target) {
				// TODO Auto-generated method stub
				if (target instanceof TextField
						&& ((TextField) target).getId().equals("nombre")) {
					txtPaginaActual.setValue("1");
					getAllTipoDocumento();
				} else if (target instanceof NumberField
						&& ((NumberField) target).getId()
								.equals("paginaActual")) {
					txtPaginaActual.setValue(txtPaginaActual.getValue()
							.toString());
					getAllTipoDocumento();
				}
			}
		});

		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class, null);
		container.addContainerProperty("cod", String.class, null);
		container.addContainerProperty("item", Long.class, null);
		container.addContainerProperty("nombre", String.class, null);

		tbTipoDocumento.setContainerDataSource(container);
		tbTipoDocumento.setVisibleColumns(new Object[] { "item", "cod",
				"nombre" });

		tbTipoDocumento.setColumnWidth("item", 25);
		tbTipoDocumento.setColumnWidth("cod", 30);
		tbTipoDocumento.setColumnWidth("nombre", 327);

		tbTipoDocumento.setColumnHeader("item", "Item");
		tbTipoDocumento.setColumnHeader("cod", "Cod");
		tbTipoDocumento.setColumnHeader("nombre", "Nombre");

		tbTipoDocumento.setColumnAlignment("item", Table.Align.CENTER);
		tbTipoDocumento.setColumnAlignment("cod", Table.Align.CENTER);
		tbTipoDocumento.setSelectable(true);
		tbTipoDocumento.setImmediate(true);
		tbTipoDocumento.addItemClickListener(new ItemClickListener() {

			@Override
			public void itemClick(ItemClickEvent event) {
				// TODO Auto-generated method stub
				if (event.isDoubleClick()) {
					Item item = tbTipoDocumento.getItem(event.getItemId());
					respuesta(new Long(item.getItemProperty("id").getValue()
							.toString()));
				}
			}
		});

	}

	public void getAllTipoDocumento() {
		IndexedContainer container = (IndexedContainer) tbTipoDocumento
				.getContainerDataSource();
		container.removeAllItems();

		List<TipoDocumento> tiposDocs = null;
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		TipoDocumento documBuscar = new TipoDocumento();
		documBuscar.setNombre(this.txtNombre.getValue().toString());

		Busqueda busqueda = documentoServicio.buscarPorTipoDocumento(
				documBuscar, paginaActual);

		tiposDocs = (List<TipoDocumento>) busqueda.getRegistos();
		this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas().toString());
		this.txtPaginaActual.setValue(busqueda.getPaginaActual().toString());
		Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
				.toString()) - 1) * Constantes.PAGINACION.USUARIO + 1;

		for (int i = 0; i < tiposDocs.size(); i++) {
			Item item = container.addItem(i);
			item.getItemProperty("id").setValue(tiposDocs.get(i).getId());
			item.getItemProperty("cod").setValue(
					tiposDocs.get(i).getCodigoTipoDocumento());
			item.getItemProperty("item").setValue(numeroItem++);
			item.getItemProperty("nombre").setValue(
					tiposDocs.get(i).getNombre());

		}
	}

	public void respuesta(Long codTipoDocumento) {
		if (quienLlama instanceof ModificarDocumentoProceso) {
			ModificarDocumentoProceso panel = (ModificarDocumentoProceso) quienLlama;
			panel.obtenerTipoDocumento(codTipoDocumento);
		}
		UI.getCurrent().removeWindow(windowContiene);
	}

	@Override
	public void buttonClick(ClickEvent event) {
		if (event.getSource() == this.btnBuscar) {
			this.txtPaginaActual.setValue("1");
			getAllTipoDocumento();
		} else {
			if (event.getSource() == this.btnSiguiente) {
				Long paginaActual = Long.parseLong(this.txtPaginaActual
						.getValue().toString()) + 1;
				if (paginaActual <= Long.parseLong(this.lblTotalPaginas
						.getValue().toString())) {
					this.txtPaginaActual.setValue(paginaActual.toString());
				}
				getAllTipoDocumento();
			} else {
				if (event.getSource() == this.btnAtras) {
					Long paginaActual = Long.parseLong(this.txtPaginaActual
							.getValue().toString()) - 1;
					if (paginaActual >= 1) {
						this.txtPaginaActual.setValue(paginaActual.toString());
					}
					getAllTipoDocumento();
				} else {
					if (event.getSource() == this.btnInicio) {
						this.txtPaginaActual.setValue("1");
						getAllTipoDocumento();
					} else {
						if (event.getSource() == this.btnFinal) {
							this.txtPaginaActual.setValue(this.lblTotalPaginas
									.getValue());
							getAllTipoDocumento();
						}
					}
				}
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// tbTipoDocumento
		tbTipoDocumento = new Table();
		tbTipoDocumento.setImmediate(false);
		tbTipoDocumento.setWidth("520px");
		tbTipoDocumento.setHeight("200px");
		mainLayout.addComponent(tbTipoDocumento, "top:40.0px;left:20.0px;");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>Nombre: </b>");

		mainLayout.addComponent(label_1, "top:10.0px;left:20.0px;");

		// txtNombre
		txtNombre = new TextField();
		txtNombre.setImmediate(false);
		txtNombre.setWidth("392px");
		txtNombre.setHeight("-1px");
		mainLayout.addComponent(txtNombre, "top:10.0px;left:68.0px;");

		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setImmediate(true);
		btnBuscar.setWidth("-1px");
		btnBuscar.setHeight("-1px");
		mainLayout.addComponent(btnBuscar, "top:10.0px;left:470.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(false);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("25px");
		mainLayout.addComponent(btnInicio, "top:245.0px;left:128.0px;");

		// btnAtras
		btnAtras = new Boton();
		btnAtras.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAtras.setImmediate(false);
		btnAtras.setWidth("30px");
		btnAtras.setHeight("25px");
		mainLayout.addComponent(btnAtras, "top:245.0px;left:160.0px;");

		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("/");
		mainLayout.addComponent(label_4, "top:245.0px;left:275.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("-1px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("9999");
		mainLayout.addComponent(lblTotalPaginas, "top:245.0px;left:280.0px;");

		// txtPaginaActual
		txtPaginaActual = new NumberField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("30px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:243.0px;left:245.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("P&aacute;gina");

		mainLayout.addComponent(label_3, "top:245.0px;left:200.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png"));
		btnSiguiente.setImmediate(false);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("25px");
		mainLayout.addComponent(btnSiguiente, "top:245.0px;left:320.0px;");

		// btnFinal
		btnFinal = new Boton();
		btnFinal.setIcon(new ThemeResource("images/botones/final.png"));
		btnFinal.setImmediate(false);
		btnFinal.setWidth("30px");
		btnFinal.setHeight("25px");
		mainLayout.addComponent(btnFinal, "top:245.0px;left:353.0px;");

		return mainLayout;
	}

}
