package com.sige.gui;

import java.sql.Timestamp;
import java.util.List;

import com.sige.entidad.DocumentoInterno;
import com.sige.entidad.DocumentoInternoDestino;
import com.sige.entidad.ExpedienteMovimiento;
import com.sige.servicio.DocumenoInternoReferenService;
import com.sige.servicio.DocumentoInternoDestinoService;
import com.sige.servicio.ExpedienteMovimientoServicio;
import com.sige.servicio.TipoDocumentoServicio;
import com.sige.util.Injector;
import com.sige.util.SigeUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextArea;

public class DetalleExpedienteGrafico extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label lblFoliosValue;

	@AutoGenerated
	private Label lblFolios;

	@AutoGenerated
	private Label lblFechaRecepcionValue;

	@AutoGenerated
	private Label lblRecepcionadoPorValue;

	@AutoGenerated
	private Label lblEnviadoPorValue;

	@AutoGenerated
	private Label lblExpedienteExternoValue;

	@AutoGenerated
	private Label lblFechaValue;

	@AutoGenerated
	private Label lblDocumentoValue;

	@AutoGenerated
	private Label lblDependenciaDestinoValue;

	@AutoGenerated
	private Label lblFechaEnvioValue;

	@AutoGenerated
	private Label lblDependenciaOrigenValue;

	@AutoGenerated
	private Label lblIdenValue;

	@AutoGenerated
	private Label lblConCopiaA;

	@AutoGenerated
	private TextArea txtACopia;

	@AutoGenerated
	private Label lblRecepcionadoPor;

	@AutoGenerated
	private Label lblEnviadoPor;

	@AutoGenerated
	private TextArea txtAAsunto;

	@AutoGenerated
	private Label lblAsunto;

	@AutoGenerated
	private Table tblReferencias;

	@AutoGenerated
	private Label lblReferencia;

	@AutoGenerated
	private Label lblExpedienteExterno;

	@AutoGenerated
	private Label lblFecha;

	@AutoGenerated
	private Label lblDocumento;

	@AutoGenerated
	private Label lblDependenciaDestino;

	@AutoGenerated
	private Label lblFechaEnvio;

	@AutoGenerated
	private Label dependenciaOrigen;

	@AutoGenerated
	private Label lblIden;

	private ExpedienteMovimientoServicio expedienteMovimientoServicio;
	private TipoDocumentoServicio tipoDocumentoServicio;
	private static final long serialVersionUID = 1L;
	private DocumentoInternoDestinoService docInternoDestinoService;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	private List<ExpedienteMovimiento> expedienteMovimiento;
	private DocumentoInterno documentoInterno;
	private DocumentoInternoDestino documentoInternoDestino;
	private DocumenoInternoReferenService docInternoReferenService;

	public DetalleExpedienteGrafico(String codigoDocumento) {
		this.tipoDocumentoServicio = Injector
				.obtenerServicio(TipoDocumentoServicio.class);
		this.expedienteMovimientoServicio = Injector
				.obtenerServicio(ExpedienteMovimientoServicio.class);
		this.docInternoReferenService = Injector
				.obtenerServicio(DocumenoInternoReferenService.class);
		this.docInternoDestinoService = Injector
				.obtenerServicio(DocumentoInternoDestinoService.class);
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
		getDetalle(codigoDocumento);
		// TODO add user code here
	}

	private void postBuild() {
		lblDependenciaDestinoValue.setValue("");
		lblDependenciaOrigenValue.setValue("");
		lblDocumentoValue.setValue("");
		lblEnviadoPorValue.setValue("");
		lblExpedienteExternoValue.setValue("");
		lblFechaEnvioValue.setValue("");
		lblFechaRecepcionValue.setValue("");
		lblIdenValue.setValue("");
		lblRecepcionadoPorValue.setValue("");
		lblFoliosValue.setValue("");

		IndexedContainer contenedorReferencia = new IndexedContainer();
		contenedorReferencia.addContainerProperty("id", Long.class, null);
		contenedorReferencia.addContainerProperty("estado", Embedded.class,
				null);
		contenedorReferencia.addContainerProperty("item", Long.class, null);
		contenedorReferencia.addContainerProperty("documento", String.class,
				null);
		contenedorReferencia.addContainerProperty("fechaEnvio",
				Timestamp.class, null);
		contenedorReferencia.addContainerProperty("dependenciaOrigen",
				String.class, null);
		contenedorReferencia.addContainerProperty("dependenciaDestino",
				String.class, null);
		contenedorReferencia.addContainerProperty("asunto", String.class, null);
		tblReferencias.setContainerDataSource(contenedorReferencia);
		tblReferencias.setVisibleColumns(new Object[] { "item", "estado",
				"documento", "fechaEnvio", "dependenciaOrigen",
				"dependenciaDestino", "asunto" });
		tblReferencias.setColumnHeader("item", "N°");
		tblReferencias.setColumnHeader("estado", " ");
		tblReferencias.setColumnHeader("documento", "Documento");
		tblReferencias.setColumnHeader("fechaEnvio", "Fecha Envío");
		tblReferencias.setColumnHeader("dependenciaOrigen",
				"Dependencia Origen");
		tblReferencias.setColumnHeader("dependenciaDestino",
				"Dependencia Destino");
		tblReferencias.setColumnHeader("asunto", "Asunto");
		tblReferencias.setColumnWidth("item", 10);
		tblReferencias.setColumnWidth("item", 15);
		tblReferencias.setColumnWidth("documento", 100);
		tblReferencias.setColumnWidth("fechaEnvio", 90);
		tblReferencias.setColumnWidth("dependenciaOrigen", 120);
		tblReferencias.setColumnWidth("dependenciaDestino", 120);
		tblReferencias.setColumnWidth("asunto", 300);

	}

	private void getDetalle(String codigo) {
		lblIdenValue.setValue(codigo);
		expedienteMovimiento = expedienteMovimientoServicio
				.buscarPorCodigoDocumento(codigo);
		if (expedienteMovimiento.size() > 0) {
			String expedienteOriginal = "";
			for (int i = 0; i < expedienteMovimiento.size(); i++) {
				expedienteOriginal += expedienteMovimiento.get(i)
						.getExpediente().getCodigo()
						+ "/";
			}
			if (expedienteMovimiento.size() <= 1) {
				lblFoliosValue.setValue(expedienteMovimiento.get(0)
						.getExpediente().getNumeroFolios()
						+ "");
			}
			documentoInterno = expedienteMovimiento.get(0)
					.getDocumentoInterno();
			documentoInternoDestino = documentoInterno
					.getDocumentosInternosDestinos().get(0);
			lblExpedienteExternoValue.setValue(expedienteOriginal);
			lblDependenciaDestinoValue.setValue(expedienteMovimiento.get(0)
					.getDependencia().getNombre());
			lblDependenciaOrigenValue.setValue(documentoInterno
					.getDependencia().getNombre());
			lblFechaEnvioValue.setValue(SigeUtil
					.obtenerFormatoFecha(documentoInternoDestino
							.getFechaCreacion()));
			// lblDocumentoValue.setValue(tipoDocumentoServicio.obtenerTipoDocumento(documentoInterno.getCodigoTipoDocumento()).getNombre());
			lblDocumentoValue.setValue(obtenerDocumento(documentoInterno));
			lblFechaValue.setValue(SigeUtil
					.obtenerFormatoFecha(documentoInterno.getFechadocumento()));
			lblEnviadoPorValue.setValue(documentoInterno.getCreadoPor());
			String recepcionadoPor = documentoInternoDestino
					.getRecepcionadoPor();
			String fechaRecepcion = SigeUtil
					.obtenerFormatoFecha(documentoInternoDestino
							.getFechaRecepcion());
			if (recepcionadoPor != null) {
				lblRecepcionadoPorValue.setValue(recepcionadoPor);
				lblFechaRecepcionValue.setValue(fechaRecepcion);
			}
			txtAAsunto.setValue(expedienteMovimiento.get(0)
					.getDocumentoInterno().getAsunto());
			IndexedContainer contenedorReferencias = (IndexedContainer) tblReferencias
					.getContainerDataSource();
			contenedorReferencias.removeAllItems();
			List<DocumentoInterno> referencias = docInternoReferenService
					.obtenerReferecias(documentoInterno);
			Long numItem = 1L;
			for (int i = 0; i < referencias.size(); i++) {
				Item item = contenedorReferencias.addItem(i);
				DocumentoInternoDestino docInternoDestino = docInternoDestinoService
						.obtenerDocInternoDestinoPorDocInterno(referencias.get(
								i).getCodigodocumento());
				item.getItemProperty("id").setValue(referencias.get(i).getId());
				item.getItemProperty("item").setValue(numItem);
				item.getItemProperty("estado")
						.setValue(
								SigeUtil.asignarEstado(
										docInternoDestino.getTipoMovimiento(),
										docInternoDestino.getRecepcionadoPor() != null ? docInternoDestino
												.getRecepcionadoPor() : ""));
				// item.getItemProperty("documento").setValue(
				// tipoDocumentoServicio.obtenerTipoDocumento(
				// referencias.get(i).getCodigoTipoDocumento())
				// .getNombre());
				item.getItemProperty("documento").setValue(
						obtenerDocumento(referencias.get(i)));
				item.getItemProperty("fechaEnvio").setValue(
						referencias.get(i).getFechadocumento());
				item.getItemProperty("dependenciaOrigen").setValue(
						referencias.get(i).getDependencia().getNombre());
				item.getItemProperty("dependenciaDestino").setValue(
						docInternoDestino.getDependencia().getNombre());
				item.getItemProperty("asunto").setValue(
						referencias.get(i).getAsunto());
			}

		}
	}

	public String obtenerDocumento(DocumentoInterno documentoInterno) {
		String documento = "";
		String nombreDocumento = "";
		String abreviatura = "";
		String numeroDocumento = "";
		String anio = "";
		String codDocumento = documentoInterno.getCodigoTipoDocumento();
		nombreDocumento = tipoDocumentoServicio.obtenerTipoDocumento(
				codDocumento).getNombre();
		abreviatura = (documentoInterno.getSiglasdocumento() == null) ? ""
				: documentoInterno.getSiglasdocumento();
		numeroDocumento = (documentoInterno.getNumerodocumento() == null) ? ""
				: documentoInterno.getNumerodocumento();
		documento = nombreDocumento + " " + documentoInterno.getAñoDocumento()
				+ " " + numeroDocumento + " " + abreviatura;
		return documento;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// lblIden
		lblIden = new Label();
		lblIden.setImmediate(false);
		lblIden.setWidth("-1px");
		lblIden.setHeight("-1px");
		lblIden.setValue("iden:");
		mainLayout.addComponent(lblIden, "top:4.0px;left:17.0px;");

		// dependenciaOrigen
		dependenciaOrigen = new Label();
		dependenciaOrigen.setImmediate(false);
		dependenciaOrigen.setWidth("-1px");
		dependenciaOrigen.setHeight("-1px");
		dependenciaOrigen.setValue("Dependencia Origen:");
		mainLayout.addComponent(dependenciaOrigen, "top:28.0px;left:17.0px;");

		// lblFechaEnvio
		lblFechaEnvio = new Label();
		lblFechaEnvio.setImmediate(false);
		lblFechaEnvio.setWidth("-1px");
		lblFechaEnvio.setHeight("-1px");
		lblFechaEnvio.setValue("Fecha Envio:");
		mainLayout.addComponent(lblFechaEnvio, "top:52.0px;left:17.0px;");

		// lblDependenciaDestino
		lblDependenciaDestino = new Label();
		lblDependenciaDestino.setImmediate(false);
		lblDependenciaDestino.setWidth("-1px");
		lblDependenciaDestino.setHeight("-1px");
		lblDependenciaDestino.setValue("DependenciaDestino:");
		mainLayout.addComponent(lblDependenciaDestino,
				"top:76.0px;left:17.0px;");

		// lblDocumento
		lblDocumento = new Label();
		lblDocumento.setImmediate(false);
		lblDocumento.setWidth("-1px");
		lblDocumento.setHeight("-1px");
		lblDocumento.setValue("Documento:");
		mainLayout.addComponent(lblDocumento, "top:100.0px;left:17.0px;");

		// lblFecha
		lblFecha = new Label();
		lblFecha.setImmediate(false);
		lblFecha.setWidth("-1px");
		lblFecha.setHeight("-1px");
		lblFecha.setValue("Fecha:");
		mainLayout.addComponent(lblFecha, "top:128.0px;left:85.0px;");

		// lblExpedienteExterno
		lblExpedienteExterno = new Label();
		lblExpedienteExterno.setImmediate(false);
		lblExpedienteExterno.setWidth("-1px");
		lblExpedienteExterno.setHeight("-1px");
		lblExpedienteExterno.setValue("Expediente Externo:");
		mainLayout.addComponent(lblExpedienteExterno,
				"top:156.0px;left:17.0px;");

		// lblReferencia
		lblReferencia = new Label();
		lblReferencia.setImmediate(false);
		lblReferencia.setWidth("-1px");
		lblReferencia.setHeight("-1px");
		lblReferencia.setValue("Referencia:");
		mainLayout.addComponent(lblReferencia, "top:184.0px;left:17.0px;");

		// tblReferencias
		tblReferencias = new Table();
		tblReferencias.setImmediate(false);
		tblReferencias.setWidth("400px");
		tblReferencias.setHeight("71px");
		mainLayout.addComponent(tblReferencias, "top:209.0px;left:20.0px;");

		// lblAsunto
		lblAsunto = new Label();
		lblAsunto.setImmediate(false);
		lblAsunto.setWidth("-1px");
		lblAsunto.setHeight("-1px");
		lblAsunto.setValue("Asunto:");
		mainLayout.addComponent(lblAsunto, "top:285.0px;left:17.0px;");

		// txtAAsunto
		txtAAsunto = new TextArea();
		txtAAsunto.setImmediate(false);
		txtAAsunto.setWidth("400px");
		txtAAsunto.setHeight("54px");
		mainLayout.addComponent(txtAAsunto, "top:303.0px;left:20.0px;");

		// lblEnviadoPor
		lblEnviadoPor = new Label();
		lblEnviadoPor.setImmediate(false);
		lblEnviadoPor.setWidth("-1px");
		lblEnviadoPor.setHeight("-1px");
		lblEnviadoPor.setValue("Enviado Por:");
		mainLayout.addComponent(lblEnviadoPor, "top:369.0px;left:17.0px;");

		// lblRecepcionadoPor
		lblRecepcionadoPor = new Label();
		lblRecepcionadoPor.setImmediate(false);
		lblRecepcionadoPor.setWidth("-1px");
		lblRecepcionadoPor.setHeight("-1px");
		lblRecepcionadoPor.setValue("Recepcionado Por:");
		mainLayout.addComponent(lblRecepcionadoPor, "top:397.0px;left:17.0px;");

		// txtACopia
		txtACopia = new TextArea();
		txtACopia.setImmediate(false);
		txtACopia.setWidth("403px");
		txtACopia.setHeight("54px");
		mainLayout.addComponent(txtACopia, "top:466.0px;left:20.0px;");

		// lblConCopiaA
		lblConCopiaA = new Label();
		lblConCopiaA.setImmediate(false);
		lblConCopiaA.setWidth("-1px");
		lblConCopiaA.setHeight("-1px");
		lblConCopiaA.setValue("Con Copia a:");
		mainLayout.addComponent(lblConCopiaA, "top:444.0px;left:20.0px;");

		// lblIdenValue
		lblIdenValue = new Label();
		lblIdenValue.setImmediate(false);
		lblIdenValue.setWidth("-1px");
		lblIdenValue.setHeight("-1px");
		lblIdenValue.setValue("Label");
		mainLayout.addComponent(lblIdenValue, "top:4.0px;left:57.0px;");

		// lblDependenciaOrigenValue
		lblDependenciaOrigenValue = new Label();
		lblDependenciaOrigenValue.setImmediate(false);
		lblDependenciaOrigenValue.setWidth("-1px");
		lblDependenciaOrigenValue.setHeight("-1px");
		lblDependenciaOrigenValue.setValue("Label");
		mainLayout.addComponent(lblDependenciaOrigenValue,
				"top:28.0px;left:147.0px;");

		// lblFechaEnvioValue
		lblFechaEnvioValue = new Label();
		lblFechaEnvioValue.setImmediate(false);
		lblFechaEnvioValue.setWidth("-1px");
		lblFechaEnvioValue.setHeight("-1px");
		lblFechaEnvioValue.setValue("Label");
		mainLayout.addComponent(lblFechaEnvioValue, "top:52.0px;left:97.0px;");

		// lblDependenciaDestinoValue
		lblDependenciaDestinoValue = new Label();
		lblDependenciaDestinoValue.setImmediate(false);
		lblDependenciaDestinoValue.setWidth("-1px");
		lblDependenciaDestinoValue.setHeight("-1px");
		lblDependenciaDestinoValue.setValue("Label");
		mainLayout.addComponent(lblDependenciaDestinoValue,
				"top:76.0px;left:147.0px;");

		// lblDocumentoValue
		lblDocumentoValue = new Label();
		lblDocumentoValue.setImmediate(false);
		lblDocumentoValue.setWidth("-1px");
		lblDocumentoValue.setHeight("-1px");
		lblDocumentoValue.setValue("Label");
		mainLayout.addComponent(lblDocumentoValue, "top:100.0px;left:90.0px;");

		// lblFechaValue
		lblFechaValue = new Label();
		lblFechaValue.setImmediate(false);
		lblFechaValue.setWidth("-1px");
		lblFechaValue.setHeight("-1px");
		lblFechaValue.setValue("Label");
		mainLayout.addComponent(lblFechaValue, "top:128.0px;left:127.0px;");

		// lblExpedienteExternoValue
		lblExpedienteExternoValue = new Label();
		lblExpedienteExternoValue.setImmediate(false);
		lblExpedienteExternoValue.setWidth("-1px");
		lblExpedienteExternoValue.setHeight("-1px");
		lblExpedienteExternoValue.setValue("Label");
		mainLayout.addComponent(lblExpedienteExternoValue,
				"top:156.0px;left:137.0px;");

		// lblEnviadoPorValue
		lblEnviadoPorValue = new Label();
		lblEnviadoPorValue.setImmediate(false);
		lblEnviadoPorValue.setWidth("-1px");
		lblEnviadoPorValue.setHeight("-1px");
		lblEnviadoPorValue.setValue("Label");
		mainLayout.addComponent(lblEnviadoPorValue, "top:369.0px;left:97.0px;");

		// lblRecepcionadoPorValue
		lblRecepcionadoPorValue = new Label();
		lblRecepcionadoPorValue.setImmediate(false);
		lblRecepcionadoPorValue.setWidth("-1px");
		lblRecepcionadoPorValue.setHeight("-1px");
		lblRecepcionadoPorValue.setValue("Label");
		mainLayout.addComponent(lblRecepcionadoPorValue,
				"top:397.0px;left:137.0px;");

		// lblFechaRecepcionValue
		lblFechaRecepcionValue = new Label();
		lblFechaRecepcionValue.setImmediate(false);
		lblFechaRecepcionValue.setWidth("-1px");
		lblFechaRecepcionValue.setHeight("-1px");
		lblFechaRecepcionValue.setValue("Label");
		mainLayout.addComponent(lblFechaRecepcionValue,
				"top:420.0px;left:137.0px;");

		// lblFolios
		lblFolios = new Label();
		lblFolios.setImmediate(false);
		lblFolios.setWidth("-1px");
		lblFolios.setHeight("-1px");
		lblFolios.setValue("Folios:");
		mainLayout.addComponent(lblFolios, "top:128.0px;left:260.0px;");

		// lblFoliosValue
		lblFoliosValue = new Label();
		lblFoliosValue.setImmediate(false);
		lblFoliosValue.setWidth("-1px");
		lblFoliosValue.setHeight("-1px");
		lblFoliosValue.setValue("Label");
		mainLayout.addComponent(lblFoliosValue, "top:128.0px;left:300.0px;");

		return mainLayout;
	}

}
