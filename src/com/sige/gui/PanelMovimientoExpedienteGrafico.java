package com.sige.gui;

import java.util.List;

import com.sige.entidad.Dependencia;
import com.sige.entidad.DocumentoInternoMapeo;
import com.sige.entidad.TipoDocumento;
import com.sige.gui.ui.MovimientoExpedienteGrafico;
import com.sige.servicio.DependenciaServicio;
import com.sige.servicio.DocumentoInternoMapeoServicio;
import com.sige.servicio.TipoDocumentoServicio;
import com.sige.util.Injector;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Window;

public class PanelMovimientoExpedienteGrafico extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private MovimientoExpedienteGrafico g;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	private List<Dependencia> dependencias;
	private List<TipoDocumento> tipoDocumentos;
	private Window ventanaPrincipal;
	private CustomComponent quienLlama;
	private DocumentoInternoMapeoServicio documentoInternoMapeoServicio;
	private DependenciaServicio dependenciaServicio;
	private TipoDocumentoServicio tipoDocumentoServicio;
	List<DocumentoInternoMapeo> doc;
	private String idMesaPartes;

	private Boolean estaEnLista(String codigo) {
		for (int i = 0; i < doc.size(); i++) {
			if (doc.get(i).getCodigoDocumento().equals(codigo)) {
				return Boolean.TRUE;
			}
		}
		return Boolean.FALSE;
	}

	public PanelMovimientoExpedienteGrafico(CustomComponent quienLlama,
			String codigoDocumento) {
		documentoInternoMapeoServicio = Injector
				.obtenerServicio(DocumentoInternoMapeoServicio.class);
		dependenciaServicio = Injector
				.obtenerServicio(DependenciaServicio.class);
		tipoDocumentoServicio = Injector
				.obtenerServicio(TipoDocumentoServicio.class);

		doc = documentoInternoMapeoServicio.buscarPorCodidoDoc(codigoDocumento);

		for (int i = 0; i < doc.size(); i++) {
			if (!estaEnLista(doc.get(i).getCodigoDocumentoReferencia())) {
				doc.addAll(documentoInternoMapeoServicio.buscarPorCodidoDoc(doc
						.get(i).getCodigoDocumentoReferencia()));
			}
		}
		this.quienLlama = quienLlama;
		dependencias = dependenciaServicio.obtenerTodos();
		tipoDocumentos = tipoDocumentoServicio.obtenerTodos();
		idMesaPartes = dependenciaServicio.getCodigoMesaPartes() + "";
		buildMainLayout();

		// TODO add user code here
		setCompositionRoot(mainLayout);

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// g
		g = new MovimientoExpedienteGrafico(doc, dependencias, tipoDocumentos,idMesaPartes);
		g.setImmediate(false);
		g.setWidth("-1px");
		g.setHeight("-1px");
		g.setSizeUndefined();
		Panel panel = new Panel();
		panel.setWidth("772px");
		panel.setHeight("515px");
		// panel.getContent().setSizeUndefined();
		panel.setContent(g);
		mainLayout.addComponent(panel, "top:0.0px;left:0.0px;");

		return mainLayout;
	}

}
