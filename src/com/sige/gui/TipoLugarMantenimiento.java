package com.sige.gui;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.vaadin.dialogs.ConfirmDialog;

import com.sige.entidad.TipoLugar;
import com.sige.gui.ui.NumberField;
import com.sige.servicio.TipoLugarServicio;
import com.sige.servicio.UtilService;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.Permiso;
import com.sige.util.SigeUtil;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class TipoLugarMantenimiento extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField txtBusqAbreviatura;
	@AutoGenerated
	private Button btnImprimir;
	@AutoGenerated
	private TextField txtAbreviatura;
	@AutoGenerated
	private Label lblAbreviatura;
	@AutoGenerated
	private NumberField txtPaginaActual;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label lblSeparador;
	@AutoGenerated
	private Label lblPagina;
	@AutoGenerated
	private Boton btnFin;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Boton btnAtras;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Boton btnCancelar;
	@AutoGenerated
	private Boton btnEliminar;
	@AutoGenerated
	private Boton btnGuardar;
	@AutoGenerated
	private Boton btnNuevo;
	@AutoGenerated
	private TextField txtNombre;
	@AutoGenerated
	private Label lblNombre;
	@AutoGenerated
	private Label lblTitulo;
	@AutoGenerated
	private Table tblTipoLugar;
	@AutoGenerated
	private Boton btnBusqueda;
	@AutoGenerated
	private TextField txtBusqNombre;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	private boolean flagEsNuevo = false;

	private TipoLugarServicio tipoLugarServicio;

	private TipoLugar tipolugar;

	private Window quienLlama;

	private UtilService utilService;
	private Map<String, Integer> columnLenghts;
	private Permiso permiso;
	private boolean confirmacion = false;

	public TipoLugarMantenimiento(Window quienLlama, Permiso permiso) {
		this.utilService = Injector.obtenerServicio(UtilService.class);
		this.tipoLugarServicio = Injector
				.obtenerServicio(TipoLugarServicio.class);
		this.quienLlama = quienLlama;

		this.permiso = permiso;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		postBuild();
		resetearFormulario();
		getAllTipoLugar();

	}

	private void desactivarCampos(boolean estado) {
		txtAbreviatura.setEnabled(estado);
		txtNombre.setEnabled(estado);
	}

	private void resetearFormulario() {
		this.flagEsNuevo = false;
		this.btnCancelar.setEnabled(false);
		this.btnNuevo.setEnabled(true);
		this.btnGuardar.setEnabled(false);
		this.btnEliminar.setEnabled(false);
		this.txtNombre.setValue("");
		this.txtBusqNombre.setValue("");
		this.txtBusqAbreviatura.setValue("");
		this.txtAbreviatura.setValue("");
		desactivarCampos(false);
	}

	private void NuevoRegistro() {
		this.tipolugar = new TipoLugar();
		this.flagEsNuevo = true;
		this.btnGuardar.setCaption("Guardar");
		this.btnGuardar.setVisible(permiso.getNuevo());
		this.btnGuardar.setEnabled(true);
		this.btnCancelar.setVisible(permiso.getNuevo());
		this.btnCancelar.setEnabled(true);
		this.btnNuevo.setEnabled(false);

		this.txtBusqNombre.setValue("");
		this.txtBusqAbreviatura.setValue("");
		this.txtNombre.setValue("");
		this.txtAbreviatura.setValue("");
		desactivarCampos(permiso.getNuevo());

	}

	public void obtenerMotivo(String motivo, Boolean confirmacion,
			Integer tipoOperacion) {
		if (confirmacion) {
			tipolugar.setMotivoModificacion(motivo);
			this.confirmacion = true;
			if (tipoOperacion.equals(Constantes.TIPO_OPERACION.MODIFICACION)) {
				btnGuardar.click();
			} else {
				btnEliminar.click();
			}
			this.confirmacion = false;
		}
	}

	private void postBuild() {

		lblTitulo.setContentMode(ContentMode.HTML);

		columnLenghts = utilService.getLengthColumns("tipolugar");
		this.txtBusqNombre.setMaxLength(columnLenghts.get("nombre"));
		this.txtNombre.setMaxLength(columnLenghts.get("nombre"));
		this.txtAbreviatura.setMaxLength(columnLenghts.get("abrev"));
		this.btnNuevo.addClickListener((ClickListener) this);
		this.btnGuardar.addClickListener((ClickListener) this);
		this.btnCancelar.addClickListener((ClickListener) this);
		this.btnEliminar.addClickListener((ClickListener) this);
		this.btnBusqueda.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnAtras.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnFin.addClickListener((ClickListener) this);
		this.btnImprimir.addClickListener((ClickListener) this);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.btnAtras.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFin.setStyleName(Reindeer.BUTTON_LINK);
		this.btnBusqueda.setStyleName("buscar");
		this.txtPaginaActual.setValue("1");
		this.txtNombre.setTabIndex(1);
		this.txtAbreviatura.setTabIndex(2);

		this.txtPaginaActual.setId("paginaActual");

		this.btnBusqueda.setStyleName("buscar");
		this.txtBusqNombre.setId("buscarNombres");
		this.txtNombre.setTabIndex(1);
		this.txtAbreviatura.setTabIndex(2);
		this.btnGuardar.setTabIndex(3);
		IndexedContainer container = new IndexedContainer();
		container.addContainerProperty("id", Long.class, null);
		container.addContainerProperty("item", Long.class, null);
		container.addContainerProperty("nombre", String.class, null);
		container.addContainerProperty("abrev", String.class, null);

		tblTipoLugar.setContainerDataSource(container);
		tblTipoLugar
				.setVisibleColumns(new Object[] { "item", "nombre", "abrev" });
		tblTipoLugar.setColumnWidth("item", 25);
		tblTipoLugar.setColumnWidth("nombre", 205);
		tblTipoLugar.setColumnWidth("abrev", 92);

		tblTipoLugar.setColumnHeader("item", "Item");
		tblTipoLugar.setColumnHeader("nombre", "Nombre");
		tblTipoLugar.setColumnHeader("abrev", "Abreviatura");
		tblTipoLugar.setSelectable(true);
		tblTipoLugar.setImmediate(true);
		this.txtPaginaActual.setImmediate(true);

		this.btnCancelar.setId("cancelar");
		this.btnEliminar.setId("eliminar");
		this.btnGuardar.setId("guardar");
		this.btnNuevo.setId("nuevo");
		this.btnBusqueda.setId("consultar");
		this.btnImprimir.setId("imprimir");
		SigeUtil.validarBotones(permiso, btnImprimir, btnNuevo, btnEliminar,
				btnBusqueda, btnCancelar, btnGuardar);
		txtBusqNombre.setVisible(permiso.getConsultar());
		this.tblTipoLugar
				.addValueChangeListener(new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;

					@Override
					public void valueChange(ValueChangeEvent event) {
						Item item = tblTipoLugar.getItem(tblTipoLugar
								.getValue());
						if (item != null) {

							btnGuardar.setCaption("Actualizar");
							btnEliminar.setEnabled(true);
							btnCancelar.setVisible(permiso.getModificar());
							btnCancelar.setEnabled(true);
							btnNuevo.setEnabled(true);
							flagEsNuevo = false;
							btnGuardar.setVisible(permiso.getModificar());
							btnGuardar.setEnabled(true);
							desactivarCampos(permiso.getModificar());
							getTipoLugar(new Long(item.getItemProperty("id")
									.getValue().toString()));
							tblTipoLugar.unselect(tblTipoLugar.getValue());
						}

					}
				});
		this.txtPaginaActual.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {
			private static final long serialVersionUID = 1L;

			@Override
			public void handleAction(Object sender, Object target) {
				if (target instanceof TextField
						&& ((TextField) target).getId().equals("paginaActual")) {
					Long paginaActual = null;
					try {
						paginaActual = Long.parseLong(txtPaginaActual
								.getValue().toString());
					} catch (Exception exception) {
						paginaActual = 1L;
						Notification notificacion = new Notification(
								"Mensaje de error",
								"<br/>Debe Ingresar un número");
						notificacion.setDelayMsec(10000);
						notificacion
								.setPosition(Notification.POSITION_CENTERED_TOP);
						UI.getCurrent().showNotification(notificacion);
					}
					txtPaginaActual.setValue(paginaActual.toString());
					getAllTipoLugar();
				}
			}
		});

		this.txtNombre.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {

			private static final long serialVersionUID = 1L;

			@Override
			public void handleAction(Object sender, Object target) {
				if (target instanceof TextField) {
					txtAbreviatura.focus();
				}

			}

		});

		this.txtBusqNombre.addTextChangeListener(new TextChangeListener() {
			@Override
			public void textChange(TextChangeEvent event) {
				// TODO Auto-generated method stub
				txtPaginaActual.setValue("1");
				txtBusqNombre.setValue(event.getText());
				getAllTipoLugar();
			}
		});

		this.txtBusqAbreviatura.addTextChangeListener(new TextChangeListener() {
			@Override
			public void textChange(TextChangeEvent event) {
				// TODO Auto-generated method stub
				txtPaginaActual.setValue("1");
				txtBusqAbreviatura.setValue(event.getText());
				getAllTipoLugar();
			}
		});
	}

	private void getTipoLugar(Long idTipoLugar) {
		tipolugar = tipoLugarServicio.obtener(idTipoLugar);
		this.txtNombre.setValue(tipolugar.getNombre().trim());
		this.txtAbreviatura.setValue(tipolugar.getAbreviatura().trim());
	}

	@SuppressWarnings("unchecked")
	private void getAllTipoLugar() {
		IndexedContainer container = (IndexedContainer) tblTipoLugar
				.getContainerDataSource();
		container.removeAllItems();

		List<TipoLugar> tiposLugares = null;
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		TipoLugar tipoLugarBuscar = new TipoLugar();
		tipoLugarBuscar.setNombre(this.txtBusqNombre.getValue().toString());
		tipoLugarBuscar.setAbreviatura(this.txtBusqAbreviatura.getValue()
				.toString());

		Busqueda busqueda = tipoLugarServicio.buscarPorTipoLugar(
				tipoLugarBuscar, paginaActual);
		tiposLugares = (List<TipoLugar>) busqueda.getRegistos();

		this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas().toString());
		this.txtPaginaActual.setValue(busqueda.getPaginaActual().toString());
		Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
				.toString()) - 1) * Constantes.PAGINACION.USUARIO + 1;

		for (int i = 0; i < tiposLugares.size(); i++) {
			Item item = container.addItem(i);
			item.getItemProperty("id").setValue(tiposLugares.get(i).getId());
			item.getItemProperty("item").setValue(numeroItem++);
			item.getItemProperty("nombre").setValue(
					tiposLugares.get(i).getNombre());
			item.getItemProperty("abrev").setValue(
					tiposLugares.get(i).getAbreviatura());
		}

	}

	@Override
	public void buttonClick(ClickEvent event) {
		if (event.getSource() == (this.btnNuevo)) {
			NuevoRegistro();
			this.txtNombre.focus();

		} else {
			if (event.getSource() == this.btnGuardar) {
				if (SigeUtil.validarCamposTexto(txtAbreviatura, txtNombre)) {
					String nombreLugar = this.txtNombre.getValue().toString();

					tipolugar.setNombre(this.txtNombre.getValue().toString());
					tipolugar.setAbreviatura(this.txtAbreviatura.getValue()
							.toString());

					if (this.flagEsNuevo) {
						if (!tipoLugarServicio.validarDuplicado(tipolugar)) {
							Notificacion.show(new Notificacion(
									"El nombre de el tipo de lugar ya existe",
									Constantes.MENSAJE.TYPE_ERROR));
							return;
						}
						tipoLugarServicio.crear(tipolugar);
						Notificacion.show(new Notificacion(
								"Se guardo correctamente el tipo de lugar",
								Constantes.MENSAJE.TYPE_SUCCES));
					} else {
						if (!confirmacion) {
							Window ventana = SigeUtil.generarBuscador(
									new Window(), "INGRESAR MOTIVO", "360",
									"260");
							ventana.setContent(new PanelMotivoObservacion(
									ventana, this,
									Constantes.TIPO_OPERACION.MODIFICACION,
									(columnLenghts.get("motivomodifica"))));
							UI.getCurrent().addWindow(ventana);
							return;
						}
						tipoLugarServicio.actualizar(tipolugar);
						Notificacion.show(new Notificacion(
								"Se actualizo correctamente el tipo de lugar",
								Constantes.MENSAJE.TYPE_SUCCES));
					}
					resetearFormulario();
					getAllTipoLugar();

				} else {
					Notificacion.show(new Notificacion(
							"Debe llenar todos los campos",
							Constantes.MENSAJE.TYPE_ERROR));
				}
			} else {
				if (event.getSource() == this.btnCancelar) {
					resetearFormulario();
					getAllTipoLugar();
				} else {
					if (event.getSource() == this.btnBusqueda) {
						this.txtPaginaActual.setValue("1");
						getAllTipoLugar();
					} else {
						if (event.getSource() == this.btnEliminar) {
							if (!confirmacion) {
								Window ventana = SigeUtil.generarBuscador(
										new Window(), "INGRESAR MOTIVO", "360",
										"260");
								ventana.setContent(new PanelMotivoObservacion(
										ventana, this,
										Constantes.TIPO_OPERACION.ELIMINACION,
										(columnLenghts.get("motivomodifica"))));
								UI.getCurrent().addWindow(ventana);
								return;
							}
							ConfirmDialog.show(UI.getCurrent(), "Confirmación",
									"¿Desea elminar el tipo de lugar?",
									"Aceptar", "Cancelar",
									new ConfirmDialog.Listener() {
										private static final long serialVersionUID = 1L;

										public void onClose(ConfirmDialog dialog) {
											if (dialog.isConfirmed()) {
												tipoLugarServicio
														.eliminarTipoLugar(tipolugar);
												resetearFormulario();
												getAllTipoLugar();
											}
										}
									});
						} else {
							if (event.getSource() == this.btnSiguiente) {
								Long paginaActual = Long
										.parseLong(this.txtPaginaActual
												.getValue().toString()) + 1;
								if (paginaActual <= Long
										.parseLong(this.lblTotalPaginas
												.getValue().toString())) {
									this.txtPaginaActual.setValue(paginaActual
											.toString());
								}
								getAllTipoLugar();
							} else {
								if (event.getSource() == this.btnAtras) {
									Long paginaActual = Long
											.parseLong(this.txtPaginaActual
													.getValue().toString()) - 1;
									if (paginaActual >= 1) {
										this.txtPaginaActual
												.setValue(paginaActual
														.toString());
									}
									getAllTipoLugar();
								} else {
									if (event.getSource() == this.btnInicio) {
										this.txtPaginaActual.setValue("1");
										getAllTipoLugar();
									} else {
										if (event.getSource() == this.btnFin) {
											this.txtPaginaActual
													.setValue(this.lblTotalPaginas
															.getValue());
											getAllTipoLugar();
										} else if (event.getSource() == this.btnImprimir) {
											Window ventana = SigeUtil
													.generarBuscador(
															new Window(),
															"IMPRIMIR",
															"800px", "550px");
											Map<String, Object> parametros = new HashMap<String, Object>();
											parametros.put("nombre",
													this.txtBusqNombre
															.getValue()
															.toUpperCase());
											parametros.put("abreviatura",
													this.txtBusqAbreviatura
															.getValue()
															.toUpperCase());
											ventana.setContent(new PDFVizualizador(
													this, permiso, parametros,
													null, "TipoLugarImprimir",
													null));
											UI.getCurrent().addWindow(ventana);
										}
									}
								}
							}
						}
					}
				}
			}
		}

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// txtBusqNombre
		txtBusqNombre = new TextField();
		txtBusqNombre.setImmediate(false);
		txtBusqNombre.setWidth("220px");
		txtBusqNombre.setHeight("-1px");
		mainLayout.addComponent(txtBusqNombre, "top:17.0px;left:60.0px;");

		// btnBusqueda
		btnBusqueda = new Boton();
		btnBusqueda.setIcon(new ThemeResource("images/botones/find.png"));
		btnBusqueda.setImmediate(true);
		btnBusqueda.setWidth("28px");
		btnBusqueda.setHeight("24px");
		mainLayout.addComponent(btnBusqueda, "top:17.0px;left:369.0px;");

		// tblTipoLugar
		tblTipoLugar = new Table();
		tblTipoLugar.setImmediate(false);
		tblTipoLugar.setWidth("379px");
		tblTipoLugar.setHeight("231px");
		mainLayout.addComponent(tblTipoLugar, "top:40.0px;left:20.0px;");

		// lblTitulo
		lblTitulo = new Label();
		lblTitulo.setImmediate(false);
		lblTitulo.setWidth("-1px");
		lblTitulo.setHeight("-1px");
		lblTitulo.setValue("<b>Datos de Tipo de Lugar</b>");
		mainLayout.addComponent(lblTitulo, "top:22.0px;left:458.0px;");

		// lblNombre
		lblNombre = new Label();
		lblNombre.setImmediate(false);
		lblNombre.setWidth("-1px");
		lblNombre.setHeight("-1px");
		lblNombre.setValue("Nombre");
		mainLayout.addComponent(lblNombre, "top:62.0px;left:411.0px;");

		// txtNombre
		txtNombre = new TextField();
		txtNombre.setImmediate(false);
		txtNombre.setWidth("198px");
		txtNombre.setHeight("-1px");
		mainLayout.addComponent(txtNombre, "top:58.0px;left:472.0px;");

		// btnNuevo
		btnNuevo = new Boton();
		btnNuevo.setCaption("Nuevo");
		btnNuevo.setIcon(new ThemeResource("images/botones/new.png"));
		btnNuevo.setImmediate(true);
		btnNuevo.setWidth("100px");
		btnNuevo.setHeight("-1px");
		mainLayout.addComponent(btnNuevo, "top:135.0px;left:454.0px;");

		// btnGuardar
		btnGuardar = new Boton();
		btnGuardar.setCaption("Guardar");
		btnGuardar.setIcon(new ThemeResource("images/botones/save.png"));
		btnGuardar.setImmediate(true);
		btnGuardar.setWidth("100px");
		btnGuardar.setHeight("-1px");
		mainLayout.addComponent(btnGuardar, "top:136.0px;left:562.0px;");

		// btnEliminar
		btnEliminar = new Boton();
		btnEliminar.setCaption("Eliminar");
		btnEliminar.setIcon(new ThemeResource("images/botones/delete.png"));
		btnEliminar.setImmediate(true);
		btnEliminar.setWidth("100px");
		btnEliminar.setHeight("-1px");
		mainLayout.addComponent(btnEliminar, "top:167.0px;left:453.0px;");

		// btnCancelar
		btnCancelar = new Boton();
		btnCancelar.setCaption("Cancelar");
		btnCancelar.setIcon(new ThemeResource("images/botones/undo.png"));
		btnCancelar.setImmediate(true);
		btnCancelar.setWidth("100px");
		btnCancelar.setHeight("-1px");
		mainLayout.addComponent(btnCancelar, "top:170.0px;left:562.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(true);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("-1px");
		mainLayout.addComponent(btnInicio, "top:273.0px;left:82.0px;");

		// btnAtras
		btnAtras = new Boton();
		btnAtras.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAtras.setImmediate(true);
		btnAtras.setWidth("30px");
		btnAtras.setHeight("-1px");
		mainLayout.addComponent(btnAtras, "top:273.0px;left:112.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png/"));
		btnSiguiente.setImmediate(true);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("-1px");
		mainLayout.addComponent(btnSiguiente, "top:273.0px;left:278.0px;");

		// btnFin
		btnFin = new Boton();
		btnFin.setIcon(new ThemeResource("images/botones/final.png"));
		btnFin.setImmediate(true);
		btnFin.setWidth("30px");
		btnFin.setHeight("-1px");
		mainLayout.addComponent(btnFin, "top:273.0px;left:307.0px;");

		// lblPagina
		lblPagina = new Label();
		lblPagina.setImmediate(false);
		lblPagina.setWidth("-1px");
		lblPagina.setHeight("-1px");
		lblPagina.setValue("Página");
		mainLayout.addComponent(lblPagina, "top:279.0px;left:145.0px;");

		// lblSeparador
		lblSeparador = new Label();
		lblSeparador.setImmediate(false);
		lblSeparador.setWidth("-1px");
		lblSeparador.setHeight("-1px");
		lblSeparador.setValue("/");
		mainLayout.addComponent(lblSeparador, "top:278.0px;left:235.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("-1px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("9999");
		mainLayout.addComponent(lblTotalPaginas, "top:279.0px;left:242.0px;");

		// txtPaginaActual
		txtPaginaActual = new NumberField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("40px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:276.0px;left:190.0px;");

		// lblAbreviatura
		lblAbreviatura = new Label();
		lblAbreviatura.setImmediate(false);
		lblAbreviatura.setWidth("-1px");
		lblAbreviatura.setHeight("-1px");
		lblAbreviatura.setValue("Abreviatura");
		mainLayout.addComponent(lblAbreviatura, "top:93.0px;left:409.0px;");

		// txtAbreviatura
		txtAbreviatura = new TextField();
		txtAbreviatura.setImmediate(false);
		txtAbreviatura.setWidth("81px");
		txtAbreviatura.setHeight("-1px");
		mainLayout.addComponent(txtAbreviatura, "top:90.0px;left:476.0px;");

		// btnImprimir
		btnImprimir = new Button();
		btnImprimir.setCaption("Imprimir");
		btnImprimir.setIcon(new ThemeResource("images/botones/print.png"));
		btnImprimir.setImmediate(true);
		btnImprimir.setWidth("100px");
		btnImprimir.setHeight("-1px");
		mainLayout.addComponent(btnImprimir, "top:201.0px;left:453.0px;");

		// txtBusqAbreviatura
		txtBusqAbreviatura = new TextField();
		txtBusqAbreviatura.setImmediate(false);
		txtBusqAbreviatura.setWidth("89px");
		txtBusqAbreviatura.setHeight("-1px");
		mainLayout.addComponent(txtBusqAbreviatura, "top:16.0px;left:280.0px;");

		return mainLayout;
	}

}
