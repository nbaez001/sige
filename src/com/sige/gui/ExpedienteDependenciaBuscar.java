package com.sige.gui;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.sige.entidad.Expediente;
import com.sige.gui.ui.NumberField;
import com.sige.servicio.ExpedienteMovimientoServicio;
import com.sige.servicio.ExpedienteServicio;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.ExpedienteCanonico;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.TextField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class ExpedienteDependenciaBuscar extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Boton btnFinal;
	@AutoGenerated
	private Boton btnAnterior;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private NumberField txtPaginaActual;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private TextField txtAsunto;
	@AutoGenerated
	private TextField txtAnio;
	@AutoGenerated
	private TextField txtNumero;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private TextField txtCodigo;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private Table tbExpediente;
	private Window windowContiene;
	private CustomComponent quienLlama;
	private ExpedienteCanonico expedienteCanonico;
	private ExpedienteServicio expedienteService;
	private ExpedienteMovimientoServicio expedienteMovimientoService;
	private Log logger = LogFactory.getLog(ExpedienteDependenciaBuscar.class);

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ExpedienteDependenciaBuscar(Window windowContiene,
			CustomComponent quienLlama, ExpedienteCanonico expedienteCanonico) {
		expedienteService = Injector.obtenerServicio(ExpedienteServicio.class);
		expedienteMovimientoService = Injector
				.obtenerServicio(ExpedienteMovimientoServicio.class);
		this.windowContiene = windowContiene;
		this.quienLlama = quienLlama;
		this.expedienteCanonico = expedienteCanonico;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();

		// TODO add user code here
	}

	public void postBuild() {

		lblTotalPaginas.setContentMode(ContentMode.HTML);
		label_6.setContentMode(ContentMode.HTML);
		label_5.setContentMode(ContentMode.HTML);
		label_3.setContentMode(ContentMode.HTML);
		label_2.setContentMode(ContentMode.HTML);
		label_1.setContentMode(ContentMode.HTML);
		label_4.setContentMode(ContentMode.HTML);

		this.btnBuscar.addClickListener((ClickListener) this);
		this.btnAnterior.addClickListener((ClickListener) this);
		this.btnFinal.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnAnterior.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFinal.setStyleName(Reindeer.BUTTON_LINK);
		this.txtPaginaActual.setValue("1");
		IndexedContainer contenedor = new IndexedContainer();
		contenedor.addContainerProperty("id", Long.class, null);
		contenedor.addContainerProperty("item", Long.class, null);
		contenedor.addContainerProperty("codigo", String.class, null);
		contenedor.addContainerProperty("numero", String.class, null);
		contenedor.addContainerProperty("anio", String.class, null);
		contenedor.addContainerProperty("asunto", String.class, null);
		tbExpediente.setContainerDataSource(contenedor);
		tbExpediente.setVisibleColumns(new Object[] { "item", "codigo",
				"numero", "anio", "asunto" });
		tbExpediente.setColumnHeader("item", "N°");
		tbExpediente.setColumnHeader("codigo", "Código");
		tbExpediente.setColumnHeader("anio", "Año");
		tbExpediente.setColumnHeader("numero", "Número");
		tbExpediente.setColumnHeader("asunto", "Asunto");

		tbExpediente.setColumnWidth("item", 20);
		tbExpediente.setColumnWidth("codigo", 120);
		tbExpediente.setColumnWidth("anio", 80);
		tbExpediente.setColumnWidth("numero", 100);
		tbExpediente.setColumnWidth("asunto", 280);
		tbExpediente.setSelectable(true);
		tbExpediente.setImmediate(true);
		tbExpediente.addItemClickListener(new ItemClickListener() {

			@Override
			public void itemClick(ItemClickEvent event) {
				// TODO Auto-generated method stub
				if (event.isDoubleClick()) {
					Item item = tbExpediente.getItem(event.getItemId());
					respuesta(new Long(item.getItemProperty("id").getValue()
							.toString()));
				}
			}
		});
		txtPaginaActual.setImmediate(true);
		txtCodigo.setImmediate(true);
		txtNumero.setImmediate(true);
		txtAnio.setImmediate(true);
		txtAsunto.setImmediate(true);
		this.txtCodigo.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {

			@Override
			public void handleAction(Object sender, Object target) {
				// TODO Auto-generated method stub
				txtPaginaActual.setValue("1");
				getAllExpedientes();
			}
		});
		;
	}

	public void respuesta(Long codExpediente) {
		if (quienLlama instanceof ModificarDocumentoProceso) {
			ModificarDocumentoProceso panel = (ModificarDocumentoProceso) quienLlama;
			panel.obtenerExpediente(codExpediente);
		}
		UI.getCurrent().removeWindow(windowContiene);
	}

	public void getAllExpedientes() {
		IndexedContainer contenedor = (IndexedContainer) tbExpediente
				.getContainerDataSource();
		contenedor.removeAllItems();

		Expediente expedienteBuscar = new Expediente();
		expedienteBuscar.setCodigo(this.txtCodigo.getValue().toString());
		expedienteBuscar.setAnio(this.txtAnio.getValue().toString());
		expedienteBuscar.setNumero(this.txtNumero.getValue().toString());
		expedienteBuscar.setAsunto(this.txtAsunto.getValue().toString());
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		Busqueda busqueda = expedienteService.buscarExpediente(
				expedienteBuscar, paginaActual, this.expedienteCanonico);
		if (busqueda.getRegistos().size() == 0) {
			Notificacion.show(new Notificacion("No se encontraron Datos",
					Constantes.MENSAJE.TYPE_WARNING));
		} else {
			List<Expediente> expedientes = (List<Expediente>) busqueda
					.getRegistos();
			this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas() + "");
			this.txtPaginaActual.setValue(busqueda.getPaginaActual() + "");
			Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
					.toString()) - 1) * Constantes.PAGINACION.EXPEDIENTE + 1;

			for (int i = 0; i < expedientes.size(); i++) {
				Item item = contenedor.addItem(i);
				item.getItemProperty("id").setValue(expedientes.get(i).getId());
				item.getItemProperty("item").setValue(numeroItem++);
				item.getItemProperty("codigo").setValue(
						expedientes.get(i).getCodigo());
				item.getItemProperty("asunto").setValue(
						expedientes.get(i).getAsunto());
				item.getItemProperty("anio").setValue(
						expedientes.get(i).getAnio());
				item.getItemProperty("numero").setValue(
						expedientes.get(i).getNumero());
			}
		}

	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscar) {
			txtPaginaActual.setValue("1");
			getAllExpedientes();
		} else {
			if (event.getSource() == this.btnSiguiente) {
				Long paginaActual = Long.parseLong(this.txtPaginaActual
						.getValue().toString()) + 1;
				if (paginaActual <= Long.parseLong(this.lblTotalPaginas
						.getValue().toString())) {
					this.txtPaginaActual.setValue(paginaActual.toString());
				}
				getAllExpedientes();
			} else {
				if (event.getSource() == this.btnAnterior) {
					Long paginaActual = Long.parseLong(this.txtPaginaActual
							.getValue().toString()) - 1;
					if (paginaActual >= 1) {
						this.txtPaginaActual.setValue(paginaActual.toString());
					}
					getAllExpedientes();
				} else {
					if (event.getSource() == this.btnInicio) {
						this.txtPaginaActual.setValue("1");
						getAllExpedientes();
					} else {
						if (event.getSource() == this.btnFinal) {
							this.txtPaginaActual.setValue(this.lblTotalPaginas
									.getValue());
							getAllExpedientes();
						}
					}
				}
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// tbExpediente
		tbExpediente = new Table();
		tbExpediente.setImmediate(false);
		tbExpediente.setWidth("620px");
		tbExpediente.setHeight("250px");
		mainLayout.addComponent(tbExpediente, "top:70.0px;left:20.0px;");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>C&oacute;digo: ");

		mainLayout.addComponent(label_1, "top:5.0px;left:20.0px;");

		// txtCodigo
		txtCodigo = new TextField();
		txtCodigo.setImmediate(false);
		txtCodigo.setWidth("154px");
		txtCodigo.setHeight("-1px");
		mainLayout.addComponent(txtCodigo, "top:5.0px;left:66.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<b>N&uacute;mero: ");

		mainLayout.addComponent(label_2, "top:5.0px;left:268.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("<b>A&ntilde;o: ");

		mainLayout.addComponent(label_3, "top:5.0px;left:510.0px;");

		// txtNumero
		txtNumero = new TextField();
		txtNumero.setImmediate(false);
		txtNumero.setWidth("160px");
		txtNumero.setHeight("-1px");
		mainLayout.addComponent(txtNumero, "top:5.0px;left:320.0px;");

		// txtAnio
		txtAnio = new TextField();
		txtAnio.setImmediate(false);
		txtAnio.setWidth("79px");
		txtAnio.setHeight("-1px");
		mainLayout.addComponent(txtAnio, "top:5.0px;left:541.0px;");

		// txtAsunto
		txtAsunto = new TextField();
		txtAsunto.setImmediate(false);
		txtAsunto.setWidth("474px");
		txtAsunto.setHeight("-1px");
		mainLayout.addComponent(txtAsunto, "top:36.0px;left:66.0px;");

		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("<b>Asunto: ");

		mainLayout.addComponent(label_4, "top:42.0px;left:20.0px;");

		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setImmediate(true);
		btnBuscar.setWidth("80px");
		btnBuscar.setHeight("-1px");
		mainLayout.addComponent(btnBuscar, "top:36.0px;left:560.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(false);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("25px");
		mainLayout.addComponent(btnInicio, "top:323.0px;left:170.0px;");

		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("P&aacute;gina");

		mainLayout.addComponent(label_5, "top:323.0px;left:240.0px;");

		// txtPaginaActual
		txtPaginaActual = new NumberField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("30px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:320.0px;left:286.0px;");

		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("/ ");

		mainLayout.addComponent(label_6, "top:322.0px;left:320.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("-1px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("1");

		mainLayout.addComponent(lblTotalPaginas, "top:323.0px;left:330.0px;");

		// btnAnterior
		btnAnterior = new Boton();
		btnAnterior.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAnterior.setImmediate(false);
		btnAnterior.setWidth("30px");
		btnAnterior.setHeight("25px");
		mainLayout.addComponent(btnAnterior, "top:323.0px;left:205.0px;");

		// btnFinal
		btnFinal = new Boton();
		btnFinal.setIcon(new ThemeResource("images/botones/final.png"));
		btnFinal.setImmediate(false);
		btnFinal.setWidth("30px");
		btnFinal.setHeight("25px");
		mainLayout.addComponent(btnFinal, "top:322.0px;left:385.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png"));
		btnSiguiente.setImmediate(false);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("25px");
		mainLayout.addComponent(btnSiguiente, "top:322.0px;left:350.0px;");

		return mainLayout;
	}

}
