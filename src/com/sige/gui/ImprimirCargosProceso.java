package com.sige.gui;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.sige.entidad.Dependencia;
import com.sige.servicio.DependenciaServicio;
import com.sige.util.Boton;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.Permiso;
import com.sige.util.SigeUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.event.FieldEvents.BlurEvent;
import com.vaadin.event.FieldEvents.BlurListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeSelect;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class ImprimirCargosProceso extends CustomComponent implements
		ClickListener {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private PopupDateField dateFechaRecepcion;
	@AutoGenerated
	private Button btnImprimir;
	@AutoGenerated
	private Panel panel_4;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_3;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private NativeSelect segundosHasta;
	@AutoGenerated
	private NativeSelect segundosDesde;
	@AutoGenerated
	private TextField nroExpHasta;
	@AutoGenerated
	private TextField nroExpDesde;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private NativeSelect minutosHasta;
	@AutoGenerated
	private NativeSelect horasHasta;
	@AutoGenerated
	private NativeSelect minutosDesde;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private NativeSelect horaDesde;
	@AutoGenerated
	private CheckBox chkTodos;
	@AutoGenerated
	private CheckBox chkNmroExpediente;
	@AutoGenerated
	private CheckBox chkHora;
	@AutoGenerated
	private Label lblHastaExp;
	@AutoGenerated
	private Label lblDesdeExp;
	@AutoGenerated
	private TextField txtAnio;
	@AutoGenerated
	private Label lblAnio;
	@AutoGenerated
	private Label lblHasta;
	@AutoGenerated
	private Label lblDesde;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_2;
	@AutoGenerated
	private TextField txtNombreDependencia;
	@AutoGenerated
	private TextField txtCodigoDependencia;
	@AutoGenerated
	private Boton btnBuscarDependencia;
	@AutoGenerated
	private Label lblDependencia;
	@AutoGenerated
	private OptionGroup optOpcionesDependencaia;
	@AutoGenerated
	private Label lblFechaRecepcion;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	private static final Log logger = LogFactory
			.getLog(ImprimirCargosProceso.class);
	public Dependencia dependenciaObtenida;
	public DependenciaServicio dependenciaService;
	private Permiso permiso;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ImprimirCargosProceso(Permiso permisos) {
		dependenciaService = Injector
				.obtenerServicio(DependenciaServicio.class);
		this.permiso = permisos;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();
		llenarHoras();
	}

	public void postBuild() {
		this.dateFechaRecepcion.setValue(new java.util.Date());
		this.dateFechaRecepcion.setResolution(PopupDateField.RESOLUTION_DAY);
		this.dateFechaRecepcion.setDateFormat("dd/MM/yyyy");
		this.txtNombreDependencia.setEnabled(false);
		lblDependencia.setContentMode(ContentMode.HTML);
		lblFechaRecepcion.setContentMode(ContentMode.HTML);
		lblDependencia.setContentMode(ContentMode.HTML);
		lblDesde.setContentMode(ContentMode.HTML);
		lblDesdeExp.setContentMode(ContentMode.HTML);
		lblAnio.setContentMode(ContentMode.HTML);
		lblHasta.setContentMode(ContentMode.HTML);
		lblHastaExp.setContentMode(ContentMode.HTML);
		this.optOpcionesDependencaia.addItem(1);
		this.optOpcionesDependencaia.addItem(2);
		this.optOpcionesDependencaia.setItemCaption(1, "Todas");
		this.optOpcionesDependencaia.setItemCaption(2, "");
		this.optOpcionesDependencaia.select(1);
		this.btnBuscarDependencia.addClickListener((ClickListener) this);
		this.btnImprimir.addClickListener((ClickListener) this);
		this.btnBuscarDependencia.setStyleName(Reindeer.BUTTON_LINK);
		chkHora.setValue(Boolean.TRUE);
		chkHora.setImmediate(true);
		chkHora.addValueChangeListener(new ValueChangeListener() {
			@Override
			public void valueChange(ValueChangeEvent event) {
				if (chkHora.getValue()) {
					chkNmroExpediente.setValue(Boolean.FALSE);
					chkTodos.setValue(Boolean.FALSE);
				}

			}
		});

		chkNmroExpediente.setValue(Boolean.FALSE);
		chkNmroExpediente.setImmediate(true);
		chkNmroExpediente.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (chkNmroExpediente.getValue()) {
					chkHora.setValue(Boolean.FALSE);
					chkTodos.setValue(Boolean.FALSE);
				}

			}
		});
		chkTodos.setValue(Boolean.FALSE);
		chkTodos.setImmediate(true);
		chkTodos.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (chkTodos.getValue()) {
					chkNmroExpediente.setValue(Boolean.FALSE);
					chkHora.setValue(Boolean.FALSE);
				}

			}
		});

	}

	public void llenarHoras() {
		for (int i = 0; i < 24; i++) {
			String hora = String.valueOf(i);
			if (i < 10) {
				hora = "0" + hora;
			}
			horaDesde.addItem(i);
			horaDesde.setItemCaption(i, hora);
			horasHasta.addItem(i);
			horasHasta.setItemCaption(i, hora);
		}
		for (int i = 0; i < 60; i++) {
			String minutos = String.valueOf(i);
			if (i < 10) {
				minutos = "0" + minutos;
			}
			minutosDesde.addItem(i);
			minutosDesde.setItemCaption(i, minutos);
			minutosHasta.addItem(i);
			minutosHasta.setItemCaption(i, minutos);

			segundosDesde.addItem(i);
			segundosDesde.setItemCaption(i, minutos);
			segundosHasta.addItem(i);
			segundosHasta.setItemCaption(i, minutos);

		}
		segundosDesde.setValue(0);
		segundosHasta.setValue(0);
		minutosDesde.setValue(0);
		minutosHasta.setValue(0);
		horasHasta.setValue(0);
		horaDesde.setValue(0);
		segundosDesde.setNullSelectionAllowed(false);
		segundosHasta.setNullSelectionAllowed(false);
		minutosDesde.setNullSelectionAllowed(false);
		minutosHasta.setNullSelectionAllowed(false);
		horaDesde.setNullSelectionAllowed(false);
		horasHasta.setNullSelectionAllowed(false);
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscarDependencia) {
			Window ventana = SigeUtil.generarBuscador(new Window(),
					"BUSCAR DEPENDENCIA", "645px", "375px");
			ventana.setContent(new DependenciaBuscar(ventana, this));
			UI.getCurrent().addWindow(ventana);
		} else if (event.getSource() == this.btnImprimir) {
			Map<String, Object> parametros = new HashMap<String, Object>();
			parametros.put("fecharecepccion",
					this.dateFechaRecepcion.getValue());
			if (chkTodos.getValue()) {
				parametros.put("todos", "*");
				parametros.put("nroexanio", txtAnio.getValue());
				parametros.put("nroexdesde", nroExpDesde.getValue());
				parametros.put("nroexhasta", nroExpHasta.getValue());
				if (optOpcionesDependencaia.getValue().toString().equals("1")) {
					parametros.put("coddependencia", new Long("-1"));
				} else {
					if (dependenciaObtenida != null) {
						parametros.put("coddependencia",
								dependenciaObtenida.getId());
					} else {
						Notificacion.show(new Notificacion(
								"Primero debe seleccionar dependencia",
								Constantes.MENSAJE.TYPE_ERROR));
						return;
					}
				}
				parametros.put("horadesde", horaDesde.getValue() + ":"
						+ minutosDesde.getValue() + ":" + horaDesde.getValue());
				parametros
						.put("horahasta",
								horasHasta.getValue() + ":"
										+ minutosHasta.getValue() + ":"
										+ horasHasta.getValue());
			} else if (chkNmroExpediente.getValue()) {
				parametros.put("todos", txtAnio.getValue());
				parametros.put("nroexanio", txtAnio.getValue());
				parametros.put("nroexdesde",
						SigeUtil.completarCeros(nroExpDesde.getValue(), 8));
				parametros.put("nroexhasta",
						SigeUtil.completarCeros(nroExpHasta.getValue(), 8));
				if (optOpcionesDependencaia.getValue().toString().equals("1")) {
					parametros.put("coddependencia", new Long("-1"));
				} else {
					if (dependenciaObtenida != null) {
						parametros.put("coddependencia",
								dependenciaObtenida.getId());
					} else {
						Notificacion.show(new Notificacion(
								"Primero debe seleccionar dependencia",
								Constantes.MENSAJE.TYPE_ERROR));
						return;
					}
				}
				parametros.put("horadesde", "");
				parametros.put("horahasta", "");
			} else if (chkHora.getValue()) {
				parametros.put("todos", "******");
				parametros.put("nroexanio", "");
				parametros.put("nroexdesde", "");
				parametros.put("nroexhasta", "");
				logger.info("optOpcionesDependencaia.getValue()="
						+ optOpcionesDependencaia.getValue());
				if (optOpcionesDependencaia.getValue().toString().equals("1")) {
					parametros.put("coddependencia", new Long("-1"));
				} else {
					if (dependenciaObtenida != null) {
						parametros.put("coddependencia",
								dependenciaObtenida.getId());
					} else {
						Notificacion.show(new Notificacion(
								"Primero debe seleccionar dependencia",
								Constantes.MENSAJE.TYPE_ERROR));
						return;
					}
				}
				parametros.put("horadesde", horaDesde.getValue() + ":"
						+ minutosDesde.getValue() + ":" + horaDesde.getValue());
				parametros
						.put("horahasta",
								horasHasta.getValue() + ":"
										+ minutosHasta.getValue() + ":"
										+ horasHasta.getValue());
			}

			Window ventana = SigeUtil.generarBuscador(new Window(), "IMPRIMIR",
					"800px", "550px");
			ventana.setContent(new PDFVizualizador(this, permiso, parametros,
					null, "ReporteExpedienteCargos", null));
			UI.getCurrent().addWindow(ventana);
		}
	}

	public void obtenerDependencia(Long codDependencia) {
		dependenciaObtenida = dependenciaService.obtener(codDependencia);
		txtCodigoDependencia.setValue(dependenciaObtenida.getId().toString());
		txtNombreDependencia.setValue(dependenciaObtenida.getNombre()
				.toString().trim());
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// lblFechaRecepcion
		lblFechaRecepcion = new Label();
		lblFechaRecepcion.setImmediate(false);
		lblFechaRecepcion.setWidth("-1px");
		lblFechaRecepcion.setHeight("-1px");
		lblFechaRecepcion.setValue("<b>Fecha Recepci&oacute;n: ");
		mainLayout.addComponent(lblFechaRecepcion, "top:5.0px;left:180.0px;");

		// panel_2
		panel_2 = buildPanel_2();
		mainLayout.addComponent(panel_2, "top:35.0px;left:20.0px;");

		// panel_4
		panel_4 = buildPanel_4();
		mainLayout.addComponent(panel_4, "top:130.0px;left:20.0px;");

		// btnImprimir
		btnImprimir = new Button();
		btnImprimir.setCaption("Imprimir");
		btnImprimir.setIcon(new ThemeResource("images/botones/print.png"));
		btnImprimir.setImmediate(true);
		btnImprimir.setWidth("110px");
		btnImprimir.setHeight("-1px");
		mainLayout.addComponent(btnImprimir, "top:290.0px;left:240.0px;");

		// dateFechaRecepcion
		dateFechaRecepcion = new PopupDateField();
		dateFechaRecepcion.setImmediate(false);
		dateFechaRecepcion.setWidth("103px");
		dateFechaRecepcion.setHeight("-1px");
		mainLayout.addComponent(dateFechaRecepcion, "top:5.0px;left:290.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setImmediate(false);
		panel_2.setWidth("540px");
		panel_2.setHeight("85px");

		// absoluteLayout_2
		absoluteLayout_2 = buildAbsoluteLayout_2();
		panel_2.setContent(absoluteLayout_2);

		return panel_2;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_2() {
		// common part: create layout
		absoluteLayout_2 = new AbsoluteLayout();
		absoluteLayout_2.setImmediate(false);
		absoluteLayout_2.setWidth("100.0%");
		absoluteLayout_2.setHeight("100.0%");

		// optOpcionesDependencaia
		optOpcionesDependencaia = new OptionGroup();
		optOpcionesDependencaia.setImmediate(false);
		optOpcionesDependencaia.setWidth("-1px");
		optOpcionesDependencaia.setHeight("44px");
		absoluteLayout_2.addComponent(optOpcionesDependencaia,
				"top:24.0px;left:4.0px;");

		// lblDependencia
		lblDependencia = new Label();
		lblDependencia.setImmediate(false);
		lblDependencia.setWidth("-1px");
		lblDependencia.setHeight("-1px");
		lblDependencia.setValue("<b>Dependencia");
		absoluteLayout_2.addComponent(lblDependencia, "top:4.0px;left:4.0px;");

		// btnBuscarDependencia
		btnBuscarDependencia = new Boton();
		btnBuscarDependencia.setIcon(new ThemeResource(
				"images/botones/find.png"));
		btnBuscarDependencia.setImmediate(false);
		btnBuscarDependencia.setDescription("Buscar Dependencia");
		btnBuscarDependencia.setWidth("30px");
		btnBuscarDependencia.setHeight("25px");
		absoluteLayout_2.addComponent(btnBuscarDependencia,
				"top:44.0px;left:31.0px;");

		// txtCodigoDependencia
		txtCodigoDependencia = new TextField();
		txtCodigoDependencia.setImmediate(false);
		txtCodigoDependencia.setWidth("51px");
		txtCodigoDependencia.setHeight("-1px");
		absoluteLayout_2.addComponent(txtCodigoDependencia,
				"top:44.0px;left:48.0px;");

		// txtNombreDependencia
		txtNombreDependencia = new TextField();
		txtNombreDependencia.setImmediate(false);
		txtNombreDependencia.setWidth("420px");
		txtNombreDependencia.setHeight("-1px");
		absoluteLayout_2.addComponent(txtNombreDependencia,
				"top:44.0px;left:99.0px;");

		return absoluteLayout_2;
	}

	@AutoGenerated
	private Panel buildPanel_4() {
		// common part: create layout
		panel_4 = new Panel();
		panel_4.setImmediate(false);
		panel_4.setWidth("540px");
		panel_4.setHeight("150px");

		// absoluteLayout_3
		absoluteLayout_3 = buildAbsoluteLayout_3();
		panel_4.setContent(absoluteLayout_3);

		return panel_4;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_3() {
		// common part: create layout
		absoluteLayout_3 = new AbsoluteLayout();
		absoluteLayout_3.setImmediate(false);
		absoluteLayout_3.setWidth("100.0%");
		absoluteLayout_3.setHeight("100.0%");

		// lblDesde
		lblDesde = new Label();
		lblDesde.setImmediate(false);
		lblDesde.setWidth("-1px");
		lblDesde.setHeight("-1px");
		lblDesde.setValue("<b>Desde: ");
		absoluteLayout_3.addComponent(lblDesde, "top:29.0px;left:99.0px;");

		// lblHasta
		lblHasta = new Label();
		lblHasta.setImmediate(false);
		lblHasta.setWidth("-1px");
		lblHasta.setHeight("-1px");
		lblHasta.setValue("<b>Hasta: ");
		absoluteLayout_3.addComponent(lblHasta, "top:29.0px;left:320.0px;");

		// lblAnio
		lblAnio = new Label();
		lblAnio.setImmediate(false);
		lblAnio.setWidth("-1px");
		lblAnio.setHeight("-1px");
		lblAnio.setValue("<b>A&ntilde;o: ");
		absoluteLayout_3.addComponent(lblAnio, "top:80.0px;left:99.0px;");

		// txtAnio
		txtAnio = new TextField();
		txtAnio.setImmediate(false);
		txtAnio.setWidth("55px");
		txtAnio.setHeight("-1px");
		absoluteLayout_3.addComponent(txtAnio, "top:74.0px;left:133.0px;");

		// lblDesdeExp
		lblDesdeExp = new Label();
		lblDesdeExp.setImmediate(false);
		lblDesdeExp.setWidth("-1px");
		lblDesdeExp.setHeight("-1px");
		lblDesdeExp.setValue("<b>Desde: ");
		absoluteLayout_3.addComponent(lblDesdeExp, "top:80.0px;left:199.0px;");

		// lblHastaExp
		lblHastaExp = new Label();
		lblHastaExp.setImmediate(false);
		lblHastaExp.setWidth("-1px");
		lblHastaExp.setHeight("-1px");
		lblHastaExp.setValue("<b>Hasta: ");
		absoluteLayout_3.addComponent(lblHastaExp, "top:80.0px;left:362.0px;");

		// chkHora
		chkHora = new CheckBox();
		chkHora.setCaption("Por Hora");
		chkHora.setImmediate(false);
		chkHora.setWidth("-1px");
		chkHora.setHeight("-1px");
		absoluteLayout_3.addComponent(chkHora, "top:13.0px;left:6.0px;");

		// chkNmroExpediente
		chkNmroExpediente = new CheckBox();
		chkNmroExpediente.setCaption("Por Nro. Expediente");
		chkNmroExpediente.setImmediate(false);
		chkNmroExpediente.setWidth("-1px");
		chkNmroExpediente.setHeight("-1px");
		absoluteLayout_3.addComponent(chkNmroExpediente,
				"top:53.0px;left:4.0px;");

		// chkTodos
		chkTodos = new CheckBox();
		chkTodos.setCaption("Todos");
		chkTodos.setImmediate(false);
		chkTodos.setWidth("-1px");
		chkTodos.setHeight("-1px");
		absoluteLayout_3.addComponent(chkTodos, "top:113.0px;left:6.0px;");

		// horaDesde
		horaDesde = new NativeSelect();
		horaDesde.setImmediate(false);
		horaDesde.setWidth("50px");
		horaDesde.setHeight("-1px");
		absoluteLayout_3.addComponent(horaDesde, "top:29.0px;left:149.0px;");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue(": ");
		absoluteLayout_3.addComponent(label_1, "top:32.0px;left:202.0px;");

		// minutosDesde
		minutosDesde = new NativeSelect();
		minutosDesde.setImmediate(false);
		minutosDesde.setWidth("50px");
		minutosDesde.setHeight("-1px");
		absoluteLayout_3.addComponent(minutosDesde, "top:28.0px;left:210.0px;");

		// horasHasta
		horasHasta = new NativeSelect();
		horasHasta.setImmediate(false);
		horasHasta.setWidth("50px");
		horasHasta.setHeight("-1px");
		absoluteLayout_3.addComponent(horasHasta, "top:29.0px;left:372.0px;");

		// minutosHasta
		minutosHasta = new NativeSelect();
		minutosHasta.setImmediate(false);
		minutosHasta.setWidth("50px");
		minutosHasta.setHeight("-1px");
		absoluteLayout_3.addComponent(minutosHasta, "top:29.0px;left:426.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue(":");
		absoluteLayout_3.addComponent(label_3, "top:29.0px;left:423.0px;");

		// nroExpDesde
		nroExpDesde = new TextField();
		nroExpDesde.setImmediate(false);
		nroExpDesde.setWidth("74px");
		nroExpDesde.setHeight("-1px");
		absoluteLayout_3.addComponent(nroExpDesde, "top:75.0px;left:269.0px;");

		// nroExpHasta
		nroExpHasta = new TextField();
		nroExpHasta.setImmediate(false);
		nroExpHasta.setWidth("99px");
		nroExpHasta.setHeight("-1px");
		absoluteLayout_3.addComponent(nroExpHasta, "top:75.0px;left:422.0px;");

		// segundosDesde
		segundosDesde = new NativeSelect();
		segundosDesde.setImmediate(false);
		segundosDesde.setWidth("51px");
		segundosDesde.setHeight("-1px");
		absoluteLayout_3
				.addComponent(segundosDesde, "top:29.0px;left:268.0px;");

		// segundosHasta
		segundosHasta = new NativeSelect();
		segundosHasta.setImmediate(false);
		segundosHasta.setWidth("54px");
		segundosHasta.setHeight("-1px");
		absoluteLayout_3
				.addComponent(segundosHasta, "top:29.0px;left:483.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue(":");
		absoluteLayout_3.addComponent(label_2, "top:29.0px;left:262.0px;");

		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue(":");
		absoluteLayout_3.addComponent(label_4, "top:30.0px;left:478.0px;");

		return absoluteLayout_3;
	}

}
