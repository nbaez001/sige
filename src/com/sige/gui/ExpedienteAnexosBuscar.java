package com.sige.gui;

import java.util.List;
import com.sige.gui.ui.NumberField;
import com.sige.entidad.DocumentoInterno;
import com.sige.entidad.DocumentoInternoDestino;
import com.sige.entidad.Expediente;
import com.sige.entidad.ExpedienteMovimiento;
import com.sige.entidad.Persona;
import com.sige.servicio.DocumentoInternoDestinoService;
import com.sige.servicio.ExpedienteMovimientoServicio;
import com.sige.servicio.PersonaServicio;
import com.sige.util.Boton;
import com.sige.util.Busqueda;
import com.sige.util.Constantes;
import com.sige.util.Injector;
import com.sige.util.Notificacion;
import com.sige.util.SigeUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.ShortcutListener;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.Reindeer;

public class ExpedienteAnexosBuscar extends CustomComponent implements
		ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private NumberField txtAnio;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private TextField txtPaginaActual;
	@AutoGenerated
	private Label lblTotalPaginas;
	@AutoGenerated
	private Label label_7;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private Boton btnFin;
	@AutoGenerated
	private Boton btnSiguiente;
	@AutoGenerated
	private Boton btnAtras;
	@AutoGenerated
	private Boton btnInicio;
	@AutoGenerated
	private Table tbExpedientes;
	@AutoGenerated
	private Button btnBuscar;
	@AutoGenerated
	private TextField txtAsunto;
	@AutoGenerated
	private TextField txtNombreSolicitante;
	@AutoGenerated
	private TextField txtCodigoPersona;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label label_1;
	private Window windowContiene;
	private CustomComponent quienLlama;
	private ExpedienteMovimientoServicio expedienteMovimientoService;
	private PersonaServicio personaService;
	private DocumentoInternoDestinoService docInternoDestinoService;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */

	public ExpedienteAnexosBuscar(Window windowContiene,
			CustomComponent quienLlama) {
		personaService = Injector.obtenerServicio(PersonaServicio.class);
		docInternoDestinoService = Injector
				.obtenerServicio(DocumentoInternoDestinoService.class);
		expedienteMovimientoService = Injector
				.obtenerServicio(ExpedienteMovimientoServicio.class);
		this.windowContiene = windowContiene;
		this.quienLlama = quienLlama;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		postBuild();

		// TODO add user code here
	}

	@SuppressWarnings({ "serial", "deprecation" })
	public void postBuild() {
		label_1.setContentMode(ContentMode.HTML);
		label_3.setContentMode(ContentMode.HTML);
		label_7.setContentMode(ContentMode.HTML);
		label_2.setContentMode(ContentMode.HTML);
		this.btnAtras.addClickListener((ClickListener) this);
		this.btnBuscar.addClickListener((ClickListener) this);
		this.btnFin.addClickListener((ClickListener) this);
		this.btnSiguiente.addClickListener((ClickListener) this);
		this.btnInicio.addClickListener((ClickListener) this);
		this.btnAtras.setStyleName(Reindeer.BUTTON_LINK);
		this.btnSiguiente.setStyleName(Reindeer.BUTTON_LINK);
		this.btnInicio.setStyleName(Reindeer.BUTTON_LINK);
		this.btnFin.setStyleName(Reindeer.BUTTON_LINK);
		this.txtPaginaActual.setValue("1");
		IndexedContainer contenedor = new IndexedContainer();
		contenedor.addContainerProperty("id", Long.class, null);
		contenedor.addContainerProperty("item", Long.class, null);
		contenedor.addContainerProperty("expediente", String.class, null);
		contenedor.addContainerProperty("fecha", String.class, null);
		contenedor.addContainerProperty("solicitante", String.class, null);
		contenedor.addContainerProperty("dependencia", String.class, null);
		contenedor.addContainerProperty("asunto", String.class, null);
		tbExpedientes.setContainerDataSource(contenedor);
		tbExpedientes.setVisibleColumns(new Object[] { "item", "expediente",
				"fecha", "solicitante", "dependencia", "asunto" });
		tbExpedientes.setColumnHeader("item", "Nro");
		tbExpedientes.setColumnHeader("expediente", "Cod.Exp.");
		tbExpedientes.setColumnHeader("fecha", "Fecha");
		tbExpedientes.setColumnHeader("solicitante", "Solicitante");
		tbExpedientes.setColumnHeader("dependencia", "Dep. Actual");
		tbExpedientes.setColumnHeader("asunto", "Asunto");
		tbExpedientes.setColumnWidth("item", 15);
		tbExpedientes.setColumnWidth("expediente", 90);
		tbExpedientes.setColumnWidth("fecha", 90);
		tbExpedientes.setColumnWidth("solicitante", 190);
		tbExpedientes.setColumnWidth("dependencia", 150);
		tbExpedientes.setColumnWidth("asunto", 250);
		tbExpedientes.setImmediate(true);
		tbExpedientes.setSelectable(true);
		tbExpedientes.addListener(new ItemClickListener() {

			@Override
			public void itemClick(ItemClickEvent event) {
				// TODO Auto-generated method stub
				if (event.isDoubleClick()) {
					Item item = tbExpedientes.getItem(event.getItemId());
					respuesta(new Long(item.getItemProperty("id").getValue()
							.toString()));
				}
			}
		});
		txtCodigoPersona.setImmediate(true);
		txtNombreSolicitante.setImmediate(true);
		txtAnio.setImmediate(true);
		txtAsunto.setImmediate(true);
		txtCodigoPersona.addShortcutListener(new ShortcutListener("",
				KeyCode.ENTER, null) {

			@Override
			public void handleAction(Object sender, Object target) {
				// TODO Auto-generated method stub
				if (target instanceof TextField) {
					txtPaginaActual.setValue("1");
					getAllExpedientes();
				}
			}
		});

	}

	@SuppressWarnings("unchecked")
	public void getAllExpedientes() {
		Persona solicitante = new Persona();
		solicitante.setCodigoPersona(this.txtCodigoPersona.getValue()
				.toString());
		solicitante.setNombreCompleto(this.txtNombreSolicitante.getValue()
				.toString());
		Expediente expediente = new Expediente();
		expediente.setAsunto(this.txtAsunto.getValue().toString());
		expediente.setAnio(this.txtAnio.getValue().toString());
		expediente.setSolicitante(solicitante);
		Long paginaActual = Long.parseLong(this.txtPaginaActual.getValue()
				.toString());
		Busqueda busqueda = expedienteMovimientoService
				.obtenerUltimosMovimientosdeExpediente(expediente, paginaActual);
		List<ExpedienteMovimiento> movimientos = (List<ExpedienteMovimiento>) busqueda
				.getRegistos();
		IndexedContainer contenedor = (IndexedContainer) tbExpedientes
				.getContainerDataSource();
		contenedor.removeAllItems();
		if (busqueda.getRegistos().size() == 0) {
			Notificacion.show(new Notificacion(
					"Lo sentimos,No se encontraron Datos",
					Constantes.MENSAJE.TYPE_WARNING));
		} else {

			this.lblTotalPaginas.setValue(busqueda.getNumeroPaginas()
					.toString());
			this.txtPaginaActual
					.setValue(busqueda.getPaginaActual().toString());
			Long numeroItem = (Long.parseLong(this.txtPaginaActual.getValue()
					.toString()) - 1) * Constantes.PAGINACION.EXPEDIENTE + 1;
			for (int i = 0; i < movimientos.size(); i++) {
				Expediente expedient = movimientos.get(i).getExpediente();
				DocumentoInterno docInterno = movimientos.get(i)
						.getDocumentoInterno();
				DocumentoInternoDestino docInternoDestino = docInternoDestinoService
						.obtenerDocInternoDestinoPorDocInterno(docInterno
								.getCodigodocumento());
				Item item = contenedor.addItem(i);
				item.getItemProperty("id").setValue(movimientos.get(i).getId());
				item.getItemProperty("item").setValue(numeroItem++);
				item.getItemProperty("expediente").setValue(
						expedient.getCodigo());
				item.getItemProperty("fecha").setValue(
						SigeUtil.obtenerFormatoFecha(docInterno
								.getFechadocumento()));
				item.getItemProperty("solicitante").setValue(
						personaService.obtenerPersona(
								expedient.getSolicitante().getCodigoPersona())
								.getNombreCompleto());
				item.getItemProperty("dependencia").setValue(
						docInternoDestino.getDependencia().getNombre());
				item.getItemProperty("asunto").setValue(expedient.getAsunto());
			}
		}
	}

	public void respuesta(Long codMovimiento) {
		if (quienLlama instanceof AnexosExpedienteProceso) {
			AnexosExpedienteProceso panel = (AnexosExpedienteProceso) quienLlama;
			panel.getDatosExpediente(codMovimiento);
		}
		UI.getCurrent().removeWindow(windowContiene);
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		if (event.getSource() == this.btnBuscar) {
			txtPaginaActual.setValue("1");
			getAllExpedientes();
		} else {
			if (event.getSource() == this.btnSiguiente) {
				Long paginaActual = Long.parseLong(this.txtPaginaActual
						.getValue().toString()) + 1;
				if (paginaActual <= Long.parseLong(this.lblTotalPaginas
						.getValue().toString())) {
					this.txtPaginaActual.setValue(paginaActual.toString());
				}
				getAllExpedientes();
			} else {
				if (event.getSource() == this.btnAtras) {
					Long paginaActual = Long.parseLong(this.txtPaginaActual
							.getValue().toString()) - 1;
					if (paginaActual >= 1) {
						this.txtPaginaActual.setValue(paginaActual.toString());
					}
					getAllExpedientes();
				} else {
					if (event.getSource() == this.btnInicio) {
						this.txtPaginaActual.setValue("1");
						getAllExpedientes();
					} else {
						if (event.getSource() == this.btnFin) {
							this.txtPaginaActual.setValue(this.lblTotalPaginas
									.getValue());
							getAllExpedientes();
						}
					}
				}
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>C&oacute;digo - Nombre Solicitante");

		mainLayout.addComponent(label_1, "top:20.0px;left:20.0px;");

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("<b>Asunto: ");

		mainLayout.addComponent(label_3, "top:62.0px;left:20.0px;");

		// txtCodigoPersona
		txtCodigoPersona = new TextField();
		txtCodigoPersona.setImmediate(false);
		txtCodigoPersona.setWidth("43px");
		txtCodigoPersona.setHeight("-1px");
		mainLayout.addComponent(txtCodigoPersona, "top:38.0px;left:20.0px;");

		// txtNombreSolicitante
		txtNombreSolicitante = new TextField();
		txtNombreSolicitante.setImmediate(false);
		txtNombreSolicitante.setWidth("337px");
		txtNombreSolicitante.setHeight("-1px");
		mainLayout
				.addComponent(txtNombreSolicitante, "top:38.0px;left:63.0px;");

		// txtAsunto
		txtAsunto = new TextField();
		txtAsunto.setImmediate(false);
		txtAsunto.setWidth("780px");
		txtAsunto.setHeight("-1px");
		mainLayout.addComponent(txtAsunto, "top:80.0px;left:20.0px;");

		// btnBuscar
		btnBuscar = new Button();
		btnBuscar.setCaption("Buscar");
		btnBuscar.setIcon(new ThemeResource("images/botones/find.png"));
		btnBuscar.setImmediate(true);
		btnBuscar.setWidth("110px");
		btnBuscar.setHeight("-1px");
		mainLayout.addComponent(btnBuscar, "top:36.0px;left:690.0px;");

		// tbExpedientes
		tbExpedientes = new Table();
		tbExpedientes.setImmediate(false);
		tbExpedientes.setWidth("780px");
		tbExpedientes.setHeight("243px");
		mainLayout.addComponent(tbExpedientes, "top:117.0px;left:20.0px;");

		// btnInicio
		btnInicio = new Boton();
		btnInicio.setIcon(new ThemeResource("images/botones/start.png"));
		btnInicio.setImmediate(false);
		btnInicio.setWidth("30px");
		btnInicio.setHeight("25px");
		mainLayout.addComponent(btnInicio, "top:362.0px;left:240.0px;");

		// btnAtras
		btnAtras = new Boton();
		btnAtras.setIcon(new ThemeResource("images/botones/previous.png"));
		btnAtras.setImmediate(false);
		btnAtras.setWidth("30px");
		btnAtras.setHeight("25px");
		mainLayout.addComponent(btnAtras, "top:362.0px;left:280.0px;");

		// btnSiguiente
		btnSiguiente = new Boton();
		btnSiguiente.setIcon(new ThemeResource("images/botones/next.png"));
		btnSiguiente.setImmediate(false);
		btnSiguiente.setWidth("30px");
		btnSiguiente.setHeight("25px");
		mainLayout.addComponent(btnSiguiente, "top:362.0px;left:450.0px;");

		// btnFin
		btnFin = new Boton();
		btnFin.setIcon(new ThemeResource("images/botones/final.png"));
		btnFin.setImmediate(false);
		btnFin.setWidth("30px");
		btnFin.setHeight("25px");
		mainLayout.addComponent(btnFin, "top:362.0px;left:490.0px;");

		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("/");
		mainLayout.addComponent(label_6, "top:362.0px;left:410.0px;");

		// label_7
		label_7 = new Label();
		label_7.setImmediate(false);
		label_7.setWidth("-1px");
		label_7.setHeight("-1px");
		label_7.setValue("<b>P&aacute;gina: ");

		mainLayout.addComponent(label_7, "top:362.0px;left:320.0px;");

		// lblTotalPaginas
		lblTotalPaginas = new Label();
		lblTotalPaginas.setImmediate(false);
		lblTotalPaginas.setWidth("40px");
		lblTotalPaginas.setHeight("-1px");
		lblTotalPaginas.setValue("1");
		mainLayout.addComponent(lblTotalPaginas, "top:362.0px;left:420.0px;");

		// txtPaginaActual
		txtPaginaActual = new TextField();
		txtPaginaActual.setImmediate(false);
		txtPaginaActual.setWidth("30px");
		txtPaginaActual.setHeight("-1px");
		mainLayout.addComponent(txtPaginaActual, "top:362.0px;left:370.0px;");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<b>A&ntilde;o: ");

		mainLayout.addComponent(label_2, "top:20.0px;left:440.0px;");

		// txtAnio
		txtAnio = new NumberField();
		txtAnio.setImmediate(false);
		txtAnio.setWidth("-1px");
		txtAnio.setHeight("-1px");
		mainLayout.addComponent(txtAnio, "top:36.0px;left:440.0px;");

		return mainLayout;
	}

}
